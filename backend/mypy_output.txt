src/floridify/utils/sanitization.py: note: In function "sanitize_query_params":
src/floridify/utils/sanitization.py:117:36: error: Incompatible types in
assignment (expression has type "list[str | Any]", target has type "str") 
[assignment]
                sanitized[clean_key] = [
                                       ^
src/floridify/text/processor.py:23: error: Unused "type: ignore" comment 
[unused-ignore]
        import nltk  # type: ignore[import-not-found]
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/floridify/text/processor.py:23:1: error: Skipping analyzing "nltk": module
is installed, but missing library stubs or py.typed marker  [import-untyped]
        import nltk  # type: ignore[import-not-found]
    ^
src/floridify/text/processor.py:23:1: note: Error code "import-untyped" not covered by "type: ignore" comment
src/floridify/text/processor.py:125: error: Unused "type: ignore" comment 
[unused-ignore]
                from nltk.stem import WordNetLemmatizer  # type: ignore[im...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/floridify/text/processor.py:125:1: error: Skipping analyzing "nltk.stem":
module is installed, but missing library stubs or py.typed marker 
[import-untyped]
                from nltk.stem import WordNetLemmatizer  # type: ignore[im...
    ^
src/floridify/text/processor.py:125:1: note: Error code "import-untyped" not covered by "type: ignore" comment
src/floridify/text/processor.py:126: error: Unused "type: ignore" comment 
[unused-ignore]
                from nltk.tokenize import word_tokenize  # type: ignore[im...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/floridify/text/processor.py:126:1: error: Skipping analyzing
"nltk.tokenize": module is installed, but missing library stubs or py.typed
marker  [import-untyped]
                from nltk.tokenize import word_tokenize  # type: ignore[im...
    ^
src/floridify/text/processor.py:126:1: note: Error code "import-untyped" not covered by "type: ignore" comment
src/floridify/search/semantic.py:20:1: error: Cannot find implementation or
library stub for module named "numpy"  [import-not-found]
        import numpy as np  # Core numerical computing
    ^
src/floridify/text/normalizer.py:9: error: Unused "type: ignore" comment 
[unused-ignore]
        import contractions  # type: ignore[import-not-found]
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/floridify/text/normalizer.py:9:1: error: Skipping analyzing "contractions":
module is installed, but missing library stubs or py.typed marker 
[import-untyped]
        import contractions  # type: ignore[import-not-found]
    ^
src/floridify/text/normalizer.py:9:1: note: Error code "import-untyped" not covered by "type: ignore" comment
src/floridify/batch/word_filter.py:9: error: Unused "type: ignore" comment 
[unused-ignore]
    import nltk  # type: ignore[import-not-found]
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/floridify/batch/word_filter.py:9:1: error: Skipping analyzing "nltk":
module is installed, but missing library stubs or py.typed marker 
[import-untyped]
    import nltk  # type: ignore[import-not-found]
    ^
src/floridify/batch/word_filter.py:9:1: note: Error code "import-untyped" not covered by "type: ignore" comment
src/floridify/batch/word_filter.py:10: error: Unused "type: ignore" comment 
[unused-ignore]
    from nltk.corpus import stopwords  # type: ignore[import-not-found]
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/floridify/batch/word_filter.py:10:1: error: Skipping analyzing
"nltk.corpus": module is installed, but missing library stubs or py.typed marker
 [import-untyped]
    from nltk.corpus import stopwords  # type: ignore[import-not-found]
    ^
src/floridify/batch/word_filter.py:10:1: note: Error code "import-untyped" not covered by "type: ignore" comment
src/floridify/batch/word_filter.py:10:1: note: See https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-imports
src/floridify/api/middleware/rate_limiting.py: note: In member "__init__" of class "RateLimitedRoute":
src/floridify/api/middleware/rate_limiting.py:206:5: error: Function is missing
a type annotation for one or more arguments  [no-untyped-def]
        def __init__(
        ^
src/floridify/api/middleware/rate_limiting.py: note: In member "get_route_handler" of class "RateLimitedRoute":
src/floridify/api/middleware/rate_limiting.py:215:36: error: Missing type
parameters for generic type "Callable"  [type-arg]
        def get_route_handler(self) -> Callable:
                                       ^
src/floridify/api/middleware/rate_limiting.py: note: In function "rate_limit":
src/floridify/api/middleware/rate_limiting.py:247:6: error: Missing type
parameters for generic type "Callable"  [type-arg]
    ) -> Callable:
         ^
src/floridify/api/middleware/rate_limiting.py:254:25: error: Missing type
parameters for generic type "Callable"  [type-arg]
        def decorator(func: Callable) -> Callable:
                            ^
src/floridify/api/middleware/rate_limiting.py:255:9: error: Function is missing
a return type annotation  [no-untyped-def]
            async def wrapper(request: Request, *args, **kwargs):
            ^
src/floridify/api/middleware/rate_limiting.py:255:9: error: Function is missing
a type annotation for one or more arguments  [no-untyped-def]
            async def wrapper(request: Request, *args, **kwargs):
            ^
src/floridify/api/core/monitoring.py: note: In member "__new__" of class "PerformanceMetrics":
src/floridify/api/core/monitoring.py:22:5: error: Function is missing a return
type annotation  [no-untyped-def]
        def __new__(cls):
        ^
src/floridify/api/core/monitoring.py: note: In member "_initialize" of class "PerformanceMetrics":
src/floridify/api/core/monitoring.py:28:5: error: Function is missing a return
type annotation  [no-untyped-def]
        def _initialize(self):
        ^
src/floridify/api/core/monitoring.py:28:5: note: Use "-> None" if function does not return a value
src/floridify/api/core/monitoring.py: note: In member "record_request" of class "PerformanceMetrics":
src/floridify/api/core/monitoring.py:36:5: error: Function is missing a return
type annotation  [no-untyped-def]
        def record_request(self, endpoint: str, duration: float, status_co...
        ^
src/floridify/api/core/monitoring.py: note: In member "record_cache_hit" of class "PerformanceMetrics":
src/floridify/api/core/monitoring.py:48:5: error: Function is missing a return
type annotation  [no-untyped-def]
        def record_cache_hit(self, cache_type: str):
        ^
src/floridify/api/core/monitoring.py: note: In member "record_cache_miss" of class "PerformanceMetrics":
src/floridify/api/core/monitoring.py:52:5: error: Function is missing a return
type annotation  [no-untyped-def]
        def record_cache_miss(self, cache_type: str):
        ^
src/floridify/api/core/monitoring.py: note: In member "record_db_query" of class "PerformanceMetrics":
src/floridify/api/core/monitoring.py:56:5: error: Function is missing a return
type annotation  [no-untyped-def]
        def record_db_query(self, collection: str, operation: str, duratio...
        ^
src/floridify/api/core/monitoring.py: note: In member "record_error" of class "PerformanceMetrics":
src/floridify/api/core/monitoring.py:68:5: error: Function is missing a return
type annotation  [no-untyped-def]
        def record_error(self, endpoint: str, error_type: str):
        ^
src/floridify/api/core/monitoring.py: note: In member "reset_stats" of class "PerformanceMetrics":
src/floridify/api/core/monitoring.py:121:5: error: Function is missing a return
type annotation  [no-untyped-def]
        def reset_stats(self):
        ^
src/floridify/api/core/monitoring.py:121:5: note: Use "-> None" if function does not return a value
src/floridify/api/core/monitoring.py: note: In function "track_request_performance":
src/floridify/api/core/monitoring.py:131:1: error: Function is missing a return
type annotation  [no-untyped-def]
    async def track_request_performance(request: Request, response: Respon...
    ^
src/floridify/api/core/monitoring.py: note: In function "track_db_operation":
src/floridify/api/core/monitoring.py:153:1: error: Function is missing a return
type annotation  [no-untyped-def]
    def track_db_operation(collection: str, operation: str):
    ^
src/floridify/api/core/monitoring.py:155:25: error: Missing type parameters for
generic type "Callable"  [type-arg]
        def decorator(func: Callable) -> Callable:
                            ^
src/floridify/api/core/monitoring.py:156:9: error: Function is missing a type
annotation  [no-untyped-def]
            async def wrapper(*args, **kwargs):
            ^
src/floridify/api/core/monitoring.py: note: In member "__init__" of class "SlowQueryDetector":
src/floridify/api/core/monitoring.py:180:9: error: Need type annotation for
"slow_queries" (hint: "slow_queries: list[<type>] = ...")  [var-annotated]
            self.slow_queries = []
            ^~~~~~~~~~~~~~~~~
src/floridify/api/core/monitoring.py: note: In member "track" of class "SlowQueryDetector":
src/floridify/api/core/monitoring.py:183:5: error: Function is missing a return
type annotation  [no-untyped-def]
        async def track(self, query_description: str):
        ^
src/floridify/api/core/monitoring.py: note: In member "__init__" of class "RequestRateLimiter":
src/floridify/api/core/monitoring.py:220:5: error: Function is missing a return
type annotation  [no-untyped-def]
        def __init__(self):
        ^
src/floridify/api/core/monitoring.py:220:5: note: Use "-> None" if function does not return a value
src/floridify/api/core/cache.py: note: In function "cached_endpoint":
src/floridify/api/core/cache.py:60:6: error: Missing type parameters for
generic type "Callable"  [type-arg]
    ) -> Callable:
         ^
src/floridify/api/core/cache.py:67:25: error: Missing type parameters for
generic type "Callable"  [type-arg]
        def decorator(func: Callable) -> Callable:
                            ^
src/floridify/api/core/cache.py:69:9: error: Function is missing a return type
annotation  [no-untyped-def]
            async def wrapper(request: Request, response: Response, *args,...
            ^
src/floridify/api/core/cache.py:69:9: error: Function is missing a type
annotation for one or more arguments  [no-untyped-def]
            async def wrapper(request: Request, response: Response, *args,...
            ^
src/floridify/api/core/cache.py:75:27: error: Incompatible types in "await"
(actual type "None", expected type "Awaitable[Any]")  [misc]
                cached_data = await cache_manager.get(cache_key)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/floridify/api/core/cache.py:75:51: error: Argument 1 to "get" of
"CacheManager" has incompatible type "str"; expected "tuple[Any, ...]" 
[arg-type]
                cached_data = await cache_manager.get(cache_key)
                                                      ^~~~~~~~~
src/floridify/api/core/cache.py:119:19: error: Unexpected keyword argument
"ttl" for "set" of "CacheManager"  [call-arg]
                await cache_manager.set(
                      ^
src/floridify/api/core/cache.py:119:19: error: "set" of "CacheManager" does not
return a value (it only ever returns None)  [func-returns-value]
                await cache_manager.set(
                      ^
src/floridify/api/core/cache.py:120:17: error: Argument 1 to "set" of
"CacheManager" has incompatible type "str"; expected "tuple[Any, ...]" 
[arg-type]
                    cache_key,
                    ^~~~~~~~~
src/floridify/api/core/cache.py: note: In member "invalidate_pattern" of class "CacheInvalidator":
src/floridify/api/core/cache.py:149:15: error: Unexpected keyword argument
"ttl" for "set" of "CacheManager"  [call-arg]
            await self.cache_manager.set(
                  ^
src/floridify/api/core/cache.py:149:15: error: "set" of "CacheManager" does not
return a value (it only ever returns None)  [func-returns-value]
            await self.cache_manager.set(
                  ^
src/floridify/api/core/cache.py:150:13: error: Argument 1 to "set" of
"CacheManager" has incompatible type "str"; expected "tuple[Any, ...]" 
[arg-type]
                invalidation_key,
                ^~~~~~~~~~~~~~~~
src/floridify/api/core/cache.py: note: In member "__aenter__" of class "ResponseCache":
src/floridify/api/core/cache.py:223:5: error: Function is missing a return type
annotation  [no-untyped-def]
        async def __aenter__(self):
        ^
src/floridify/api/core/cache.py:224:27: error: Incompatible types in assignment
(expression has type "datetime", variable has type "None")  [assignment]
            self.start_time = datetime.utcnow()
                              ^~~~~~~~~~~~~~~~~
src/floridify/api/core/cache.py:226:26: error: Incompatible types in assignment
(expression has type "str", variable has type "None")  [assignment]
            self.cache_key = generate_cache_key(self.request, config, self...
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/floridify/api/core/cache.py:229:18: error: Incompatible types in "await"
(actual type "None", expected type "Awaitable[Any]")  [misc]
            cached = await self.cache_manager.get(self.cache_key)
                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/floridify/api/core/cache.py:229:47: error: Argument 1 to "get" of
"CacheManager" has incompatible type "None"; expected "tuple[Any, ...]" 
[arg-type]
            cached = await self.cache_manager.get(self.cache_key)
                                                  ^~~~~~~~~~~~~~
src/floridify/api/core/cache.py: note: In member "__aexit__" of class "ResponseCache":
src/floridify/api/core/cache.py:237:5: error: Function is missing a type
annotation  [no-untyped-def]
        async def __aexit__(self, exc_type, exc_val, exc_tb):
        ^
src/floridify/list/parser.py:9: error: Unused "type: ignore" comment 
[unused-ignore]
    import coolname  # type: ignore[import-not-found]
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/floridify/list/parser.py:9:1: error: Skipping analyzing "coolname": module
is installed, but missing library stubs or py.typed marker  [import-untyped]
    import coolname  # type: ignore[import-not-found]
    ^
src/floridify/list/parser.py:9:1: note: Error code "import-untyped" not covered by "type: ignore" comment
src/floridify/api/core/base.py: note: In member "get_sort_criteria" of class "SortParams":
src/floridify/api/core/base.py:53:41: error: Missing type parameters for
generic type "tuple"  [type-arg]
        def get_sort_criteria(self) -> list[tuple] | None:
                                            ^
src/floridify/api/core/base.py: note: In member "__init__" of class "ListResponse":
src/floridify/api/core/base.py:87:5: error: Function is missing a type
annotation  [no-untyped-def]
        def __init__(self, **data):
        ^
src/floridify/api/core/base.py: note: In member "update" of class "BaseRepository":
src/floridify/api/core/base.py:184:16: error: Item "None" of "T | None" has no
attribute "version"  [union-attr]
                if doc.version != version:
                   ^~~~~~~~~~~
src/floridify/api/core/base.py:194:13: error: Item "None" of "T | None" has no
attribute "version"  [union-attr]
                doc.version += 1
                ^~~~~~~~~~~
src/floridify/api/core/base.py:196:15: error: Item "None" of "T | None" has no
attribute "save"  [union-attr]
            await doc.save()
                  ^~~~~~~~
src/floridify/api/core/base.py:197:16: error: Incompatible return value type
(got "T | None", expected "T")  [return-value]
            return doc
                   ^~~
src/floridify/api/core/base.py: note: In member "delete" of class "BaseRepository":
src/floridify/api/core/base.py:208:40: error: Argument 1 to "_cascade_delete"
of "BaseRepository" has incompatible type "T | None"; expected "T"  [arg-type]
                await self._cascade_delete(doc)
                                           ^~~
src/floridify/api/core/base.py:210:15: error: Item "None" of "T | None" has no
attribute "delete"  [union-attr]
            await doc.delete()
                  ^~~~~~~~~~
src/floridify/api/core/base.py: note: In class "BaseRepository":
src/floridify/api/core/base.py:213:5: error: Name "get_many" already defined on
line 134  [no-redef]
        async def get_many(
        ^
src/floridify/api/core/base.py: note: In member "get_many" of class "BaseRepository":
src/floridify/api/core/base.py:234:13: error: List comprehension has
incompatible type List[T | None]; expected List[T]  [misc]
                doc_map.get(str(id)) 
                ^~~~~~~~~~~~~~~~~~~~
src/floridify/api/core/base.py: note: In member "batch_delete" of class "BaseRepository":
src/floridify/api/core/base.py:265:16: error: Item "None" of
"DeleteResult | None" has no attribute "deleted_count"  [union-attr]
            return result.deleted_count
                   ^~~~~~~~~~~~~~~~~~~~
src/floridify/api/core/base.py: note: In function "handle_api_errors":
src/floridify/api/core/base.py:273:29: error: Missing type parameters for
generic type "Callable"  [type-arg]
    def handle_api_errors(func: Callable) -> Callable:
                                ^
src/floridify/api/core/base.py:275:5: error: Function is missing a type
annotation  [no-untyped-def]
        async def wrapper(*args, **kwargs):
        ^
src/floridify/storage/mongodb.py:140: error: Unused "type: ignore" comment 
[unused-ignore]
                    pool_options = self.client.options.pool_options  # typ...
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/floridify/storage/mongodb.py: note: In function "get_database":
src/floridify/storage/mongodb.py:283:29: error: Missing type parameters for
generic type "AsyncIOMotorDatabase"  [type-arg]
    async def get_database() -> AsyncIOMotorDatabase:
                                ^
src/floridify/api/repositories/word_repository.py:11:1: error: Module
"src.floridify.models.models" does not explicitly export attribute "Language" 
[attr-defined]
    from ...models.models import Language, Word
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/floridify/api/repositories/word_repository.py: note: In member "to_query" of class "WordFilter":
src/floridify/api/repositories/word_repository.py:51:29: error: Incompatible
types in assignment (expression has type "RegEx", target has type "str") 
[assignment]
                query["text"] = RegEx(self.text_pattern, "i")
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/floridify/api/repositories/word_repository.py:54:33: error: Incompatible
types in assignment (expression has type "Language", target has type "str") 
[assignment]
                query["language"] = self.language
                                    ^~~~~~~~~~~~~
src/floridify/api/repositories/word_repository.py:57:39: error: Incompatible
types in assignment (expression has type "bool", target has type "str") 
[assignment]
                query["offensive_flag"] = self.offensive_flag
                                          ^~~~~~~~~~~~~~~~~~~
src/floridify/api/repositories/word_repository.py:65:35: error: Incompatible
types in assignment (expression has type "dict[str, datetime]", target has type
"str")  [assignment]
                query["created_at"] = created_query
                                      ^~~~~~~~~~~~~
src/floridify/api/repositories/word_repository.py: note: In member "__init__" of class "WordRepository":
src/floridify/api/repositories/word_repository.py:73:5: error: Function is
missing a return type annotation  [no-untyped-def]
        def __init__(self):
        ^
src/floridify/api/repositories/word_repository.py:73:5: note: Use "-> None" if function does not return a value
src/floridify/api/repositories/word_repository.py: note: In member "search" of class "WordRepository":
src/floridify/api/repositories/word_repository.py:107:39: error: Incompatible
types in assignment (expression has type "Language", target has type "RegEx") 
[assignment]
                filter_dict["language"] = language
                                          ^~~~~~~~
src/floridify/api/repositories/word_repository.py: note: In member "get_with_counts" of class "WordRepository":
src/floridify/api/repositories/word_repository.py:135:21: error: Item "None" of
"Word | None" has no attribute "model_dump"  [union-attr]
            word_dict = word.model_dump()
                        ^~~~~~~~~~~~~~~
src/floridify/api/repositories/synthesis_repository.py:10:1: error: Module
"src.floridify.models.models" does not explicitly export attribute "Etymology" 
[attr-defined]
    from ...models.models import Etymology, ModelInfo, SynthesizedDictiona...
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/floridify/api/repositories/synthesis_repository.py:10:1: error: Module
"src.floridify.models.models" does not explicitly export attribute "ModelInfo" 
[attr-defined]
    from ...models.models import Etymology, ModelInfo, SynthesizedDictiona...
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/floridify/api/repositories/synthesis_repository.py: note: In member "to_query" of class "SynthesisFilter":
src/floridify/api/repositories/synthesis_repository.py:54:45: error:
Incompatible types in assignment (expression has type "dict[str, None]", target
has type "str")  [assignment]
                    query["pronunciation_id"] = {"$ne": None}
                                                ^~~~~~~~~~~~~
src/floridify/api/repositories/synthesis_repository.py:56:45: error:
Incompatible types in assignment (expression has type "None", target has type
"str")  [assignment]
                    query["pronunciation_id"] = None
                                                ^~~~
src/floridify/api/repositories/synthesis_repository.py:60:38: error:
Incompatible types in assignment (expression has type "dict[str, None]", target
has type "str")  [assignment]
                    query["etymology"] = {"$ne": None}
                                         ^~~~~~~~~~~~~
src/floridify/api/repositories/synthesis_repository.py:62:38: error:
Incompatible types in assignment (expression has type "None", target has type
"str")  [assignment]
                    query["etymology"] = None
                                         ^~~~
src/floridify/api/repositories/synthesis_repository.py:66:37: error:
Incompatible types in assignment (expression has type "dict[str, list[Never]]",
target has type "str")  [assignment]
                    query["fact_ids"] = {"$ne": []}
                                        ^~~~~~~~~~~
src/floridify/api/repositories/synthesis_repository.py:68:37: error:
Incompatible types in assignment (expression has type "list[Never]", target has
type "str")  [assignment]
                    query["fact_ids"] = []
                                        ^~
src/floridify/api/repositories/synthesis_repository.py:71:36: error:
Incompatible types in assignment (expression has type "dict[str, datetime]",
target has type "str")  [assignment]
                query["accessed_at"] = {"$gte": self.accessed_after}
                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/floridify/api/repositories/synthesis_repository.py:74:37: error:
Incompatible types in assignment (expression has type "dict[str, int]", target
has type "str")  [assignment]
                query["access_count"] = {"$gte": self.min_access_count}
                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/floridify/api/repositories/synthesis_repository.py: note: In member "__init__" of class "SynthesisRepository":
src/floridify/api/repositories/synthesis_repository.py:96:5: error: Function is
missing a return type annotation  [no-untyped-def]
        def __init__(self):
        ^
src/floridify/api/repositories/synthesis_repository.py:96:5: note: Use "-> None" if function does not return a value
src/floridify/api/repositories/synthesis_repository.py: note: In member "get_component_status" of class "SynthesisRepository":
src/floridify/api/repositories/synthesis_repository.py:115:13: error: Item
"None" of "SynthesizedDictionaryEntry | None" has no attribute
"pronunciation_id"  [union-attr]
                entry.pronunciation_id is not None,
                ^~~~~~~~~~~~~~~~~~~~~~
src/floridify/api/repositories/synthesis_repository.py:116:13: error: Item
"None" of "SynthesizedDictionaryEntry | None" has no attribute "etymology" 
[union-attr]
                entry.etymology is not None,
                ^~~~~~~~~~~~~~~
src/floridify/api/repositories/synthesis_repository.py:117:18: error: Item
"None" of "SynthesizedDictionaryEntry | None" has no attribute "fact_ids" 
[union-attr]
                bool(entry.fact_ids),
                     ^~~~~~~~~~~~~~
src/floridify/api/repositories/synthesis_repository.py:118:18: error: Item
"None" of "SynthesizedDictionaryEntry | None" has no attribute "definition_ids" 
[union-attr]
                bool(entry.definition_ids),
                     ^~~~~~~~~~~~~~~~~~~~
src/floridify/api/repositories/synthesis_repository.py:123:21: error: Item
"None" of "SynthesizedDictionaryEntry | None" has no attribute "word_id" 
[union-attr]
                word_id=entry.word_id,
                        ^~~~~~~~~~~~~
src/floridify/api/repositories/synthesis_repository.py:124:31: error: Item
"None" of "SynthesizedDictionaryEntry | None" has no attribute
"pronunciation_id"  [union-attr]
                has_pronunciation=entry.pronunciation_id is not None,
                                  ^~~~~~~~~~~~~~~~~~~~~~
src/floridify/api/repositories/synthesis_repository.py:125:27: error: Item
"None" of "SynthesizedDictionaryEntry | None" has no attribute "etymology" 
[union-attr]
                has_etymology=entry.etymology is not None,
                              ^~~~~~~~~~~~~~~
src/floridify/api/repositories/synthesis_repository.py:126:28: error: Item
"None" of "SynthesizedDictionaryEntry | None" has no attribute "fact_ids" 
[union-attr]
                has_facts=bool(entry.fact_ids),
                               ^~~~~~~~~~~~~~
src/floridify/api/repositories/synthesis_repository.py:127:34: error: Item
"None" of "SynthesizedDictionaryEntry | None" has no attribute "definition_ids" 
[union-attr]
                definition_count=len(entry.definition_ids),
                                     ^~~~~~~~~~~~~~~~~~~~
src/floridify/api/repositories/synthesis_repository.py:128:28: error: Item
"None" of "SynthesizedDictionaryEntry | None" has no attribute "fact_ids" 
[union-attr]
                fact_count=len(entry.fact_ids),
                               ^~~~~~~~~~~~~~
src/floridify/api/repositories/synthesis_repository.py:130:26: error: Item
"None" of "SynthesizedDictionaryEntry | None" has no attribute "updated_at" 
[union-attr]
                last_updated=entry.updated_at,
                             ^~~~~~~~~~~~~~~~
src/floridify/api/repositories/synthesis_repository.py:131:27: error: Item
"None" of "SynthesizedDictionaryEntry | None" has no attribute "model_info" 
[union-attr]
                model_version=entry.model_info.model if entry.model_info e...
                              ^~~~~~~~~~~~~~~~
src/floridify/api/repositories/synthesis_repository.py:131:27: error: Item
"ModelInfo" of "ModelInfo | Any" has no attribute "model"  [union-attr]
                model_version=entry.model_info.model if entry.model_info e...
                              ^~~~~~~~~~~~~~~~~~~~~~
src/floridify/api/repositories/synthesis_repository.py: note: In member "update_access_info" of class "SynthesisRepository":
src/floridify/api/repositories/synthesis_repository.py:154:9: error: Item
"None" of "SynthesizedDictionaryEntry | None" has no attribute "accessed_at" 
[union-attr]
            entry.accessed_at = datetime.utcnow()
            ^~~~~~~~~~~~~~~~~
src/floridify/api/repositories/synthesis_repository.py:155:9: error: Item
"None" of "SynthesizedDictionaryEntry | None" has no attribute "access_count" 
[union-attr]
            entry.access_count += 1
            ^~~~~~~~~~~~~~~~~~
src/floridify/api/repositories/synthesis_repository.py:156:15: error: Item
"None" of "SynthesizedDictionaryEntry | None" has no attribute "save" 
[union-attr]
            await entry.save()
                  ^~~~~~~~~~
src/floridify/api/repositories/fact_repository.py: note: In member "to_query" of class "FactFilter":
src/floridify/api/repositories/fact_repository.py:50:35: error: Incompatible
types in assignment (expression has type "dict[str, None]", target has type
"str")  [assignment]
                    query["source"] = {"$ne": None}
                                      ^~~~~~~~~~~~~
src/floridify/api/repositories/fact_repository.py:52:35: error: Incompatible
types in assignment (expression has type "None", target has type "str") 
[assignment]
                    query["source"] = None
                                      ^~~~
src/floridify/api/repositories/fact_repository.py:55:41: error: Incompatible
types in assignment (expression has type "dict[str, float]", target has type
"str")  [assignment]
                query["confidence_score"] = {"$gte": self.confidence_score...
                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/floridify/api/repositories/fact_repository.py: note: In member "__init__" of class "FactRepository":
src/floridify/api/repositories/fact_repository.py:63:5: error: Function is
missing a return type annotation  [no-untyped-def]
        def __init__(self):
        ^
src/floridify/api/repositories/fact_repository.py:63:5: note: Use "-> None" if function does not return a value
src/floridify/api/repositories/example_repository.py: note: In member "to_query" of class "ExampleFilter":
src/floridify/api/repositories/example_repository.py:55:40: error: Incompatible
types in assignment (expression has type "bool", target has type "str") 
[assignment]
                query["is_ai_generated"] = self.is_ai_generated
                                           ^~~~~~~~~~~~~~~~~~~~
src/floridify/api/repositories/example_repository.py:58:39: error: Incompatible
types in assignment (expression has type "bool", target has type "str") 
[assignment]
                query["can_regenerate"] = self.can_regenerate
                                          ^~~~~~~~~~~~~~~~~~~
src/floridify/api/repositories/example_repository.py:62:46: error: Incompatible
types in assignment (expression has type "dict[str, None]", target has type
"str")  [assignment]
                    query["literature_source"] = {"$ne": None}
                                                 ^~~~~~~~~~~~~
src/floridify/api/repositories/example_repository.py:64:46: error: Incompatible
types in assignment (expression has type "None", target has type "str") 
[assignment]
                    query["literature_source"] = None
                                                 ^~~~
src/floridify/api/repositories/example_repository.py:67:38: error: Incompatible
types in assignment (expression has type "dict[str, float]", target has type
"str")  [assignment]
                query["quality_score"] = {"$gte": self.quality_score_min}
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/floridify/api/repositories/example_repository.py: note: In member "__init__" of class "ExampleRepository":
src/floridify/api/repositories/example_repository.py:75:5: error: Function is
missing a return type annotation  [no-untyped-def]
        def __init__(self):
        ^
src/floridify/api/repositories/example_repository.py:75:5: note: Use "-> None" if function does not return a value
src/floridify/api/repositories/example_repository.py: note: In member "find_regeneratable" of class "ExampleRepository":
src/floridify/api/repositories/example_repository.py:107:38: error:
Incompatible types in assignment (expression has type "str", target has type
"bool")  [assignment]
                query["definition_id"] = definition_id
                                         ^~~~~~~~~~~~~
src/floridify/api/repositories/definition_repository.py:10:1: error: Module
"src.floridify.models.models" does not explicitly export attribute "Collocation"
 [attr-defined]
    from ...models.models import (
    ^
src/floridify/api/repositories/definition_repository.py:10:1: error: Module
"src.floridify.models.models" does not explicitly export attribute
"GrammarPattern"  [attr-defined]
    from ...models.models import (
    ^
src/floridify/api/repositories/definition_repository.py:10:1: error: Module
"src.floridify.models.models" does not explicitly export attribute
"MeaningCluster"  [attr-defined]
    from ...models.models import (
    ^
src/floridify/api/repositories/definition_repository.py:10:1: error: Module
"src.floridify.models.models" does not explicitly export attribute "UsageNote" 
[attr-defined]
    from ...models.models import (
    ^
src/floridify/api/repositories/definition_repository.py:10:1: error: Module
"src.floridify.models.models" does not explicitly export attribute "WordForm" 
[attr-defined]
    from ...models.models import (
    ^
src/floridify/api/repositories/definition_repository.py: note: In member "to_query" of class "DefinitionFilter":
src/floridify/api/repositories/definition_repository.py:91:39: error:
Incompatible types in assignment (expression has type "int", target has type
"str")  [assignment]
                query["frequency_band"] = self.frequency_band
                                          ^~~~~~~~~~~~~~~~~~~
src/floridify/api/repositories/definition_repository.py:95:40: error:
Incompatible types in assignment (expression has type "dict[str, list[Never]]",
target has type "str")  [assignment]
                    query["example_ids"] = {"$ne": []}
                                           ^~~~~~~~~~~
src/floridify/api/repositories/definition_repository.py:97:40: error:
Incompatible types in assignment (expression has type "list[Never]", target has
type "str")  [assignment]
                    query["example_ids"] = []
                                           ^~
src/floridify/api/repositories/definition_repository.py: note: In member "__init__" of class "DefinitionRepository":
src/floridify/api/repositories/definition_repository.py:105:5: error: Function
is missing a return type annotation  [no-untyped-def]
        def __init__(self):
        ^
src/floridify/api/repositories/definition_repository.py:105:5: note: Use "-> None" if function does not return a value
src/floridify/api/repositories/definition_repository.py: note: In member "update_components" of class "DefinitionRepository":
src/floridify/api/repositories/definition_repository.py:139:13: error: Item
"None" of "Definition | None" has no attribute "word_forms"  [union-attr]
                definition.word_forms = [WordForm(**wf) for wf in componen...
                ^~~~~~~~~~~~~~~~~~~~~
src/floridify/api/repositories/definition_repository.py:142:13: error: Item
"None" of "Definition | None" has no attribute "grammar_patterns"  [union-attr]
                definition.grammar_patterns = [
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
src/floridify/api/repositories/definition_repository.py:147:13: error: Item
"None" of "Definition | None" has no attribute "collocations"  [union-attr]
                definition.collocations = [
                ^~~~~~~~~~~~~~~~~~~~~~~
src/floridify/api/repositories/definition_repository.py:152:13: error: Item
"None" of "Definition | None" has no attribute "usage_notes"  [union-attr]
                definition.usage_notes = [
                ^~~~~~~~~~~~~~~~~~~~~~
src/floridify/api/repositories/definition_repository.py:162:9: error: Item
"None" of "Definition | None" has no attribute "version"  [union-attr]
            definition.version += 1
            ^~~~~~~~~~~~~~~~~~
src/floridify/api/repositories/definition_repository.py:163:15: error: Item
"None" of "Definition | None" has no attribute "save"  [union-attr]
            await definition.save()
                  ^~~~~~~~~~~~~~~
src/floridify/api/repositories/definition_repository.py:164:16: error:
Incompatible return value type (got "Definition | None", expected "Definition") 
[return-value]
            return definition
                   ^~~~~~~~~~
src/floridify/api/repositories/definition_repository.py: note: In member "get_with_examples" of class "DefinitionRepository":
src/floridify/api/repositories/definition_repository.py:179:27: error: Item
"None" of "Definition | None" has no attribute "model_dump"  [union-attr]
            definition_dict = definition.model_dump()
                              ^~~~~~~~~~~~~~~~~~~~~
src/floridify/api/repositories/definition_repository.py:182:12: error: Item
"None" of "Definition | None" has no attribute "example_ids"  [union-attr]
            if definition.example_ids:
               ^~~~~~~~~~~~~~~~~~~~~~
src/floridify/api/repositories/definition_repository.py:184:32: error: Item
"None" of "Definition | None" has no attribute "example_ids"  [union-attr]
                    In(Example.id, definition.example_ids)
                                   ^~~~~~~~~~~~~~~~~~~~~~
src/floridify/connectors/wiktionary.py: note: In member "extract_definitions" of class "WiktionaryConnector":
src/floridify/connectors/wiktionary.py:657:9: error: Returning Any from
function declared to return "list[Definition]"  [no-any-return]
            return raw_data.get("definitions", [])
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/floridify/connectors/oxford.py: note: In member "extract_definitions" of class "OxfordConnector":
src/floridify/connectors/oxford.py:259:55: error: Argument "language_register"
to "Definition" has incompatible type "str | None"; expected
"Literal['formal', 'informal', 'neutral', 'slang', 'technical'] | None" 
[arg-type]
                                        language_register=register,
                                                          ^~~~~~~~
src/floridify/connectors/apple_dictionary.py:66: error: Unused "type: ignore"
comment  [unused-ignore]
                from CoreServices import DCSCopyTextDefinition  # type: ig...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/floridify/connectors/apple_dictionary.py:66:1: error: Cannot find
implementation or library stub for module named "CoreServices" 
[import-not-found]
                from CoreServices import DCSCopyTextDefinition  # type: ig...
    ^
src/floridify/connectors/apple_dictionary.py:66:1: note: Error code "import-not-found" not covered by "type: ignore" comment
src/floridify/connectors/apple_dictionary.py: note: In member "fetch_definition" of class "AppleDictionaryConnector":
src/floridify/connectors/apple_dictionary.py:279:26: error:
"type[DictionaryProvider]" has no attribute "APPLE"  [attr-defined]
                    provider=DictionaryProvider.APPLE,
                             ^~~~~~~~~~~~~~~~~~~~~~~~
src/floridify/api/core/query.py: note: In member "__init__" of class "QueryOptimizer":
src/floridify/api/core/query.py:20:28: error: Missing type parameters for
generic type "AsyncIOMotorDatabase"  [type-arg]
        def __init__(self, db: AsyncIOMotorDatabase | None = None):
                               ^
src/floridify/api/core/query.py: note: In member "_get_db" of class "QueryOptimizer":
src/floridify/api/core/query.py:23:32: error: Missing type parameters for
generic type "AsyncIOMotorDatabase"  [type-arg]
        async def _get_db(self) -> AsyncIOMotorDatabase:
                                   ^
src/floridify/api/core/query.py: note: In member "_get_index_recommendations" of class "QueryOptimizer":
src/floridify/api/core/query.py:57:54: error: Missing type parameters for
generic type "dict"  [type-arg]
    ... def _get_index_recommendations(self, stats: list[dict]) -> list[str]:
                                                         ^
src/floridify/api/core/query.py: note: In member "create_optimal_indexes" of class "QueryOptimizer":
src/floridify/api/core/query.py:105:68: error: Argument 2 to "create_index" of
"AgnosticCollection" has incompatible type "**dict[str, bool]"; expected
"AgnosticClientSession | None"  [arg-type]
    ...           index_name = await collection.create_index(keys, **options)
                                                                     ^~~~~~~
src/floridify/api/core/query.py: note: In member "profile_query" of class "QueryOptimizer":
src/floridify/api/core/query.py:114:5: error: Function is missing a return type
annotation  [no-untyped-def]
        async def profile_query(self, description: str = "Query"):
        ^
src/floridify/api/core/query.py: note: In member "__init__" of class "AggregationBuilder":
src/floridify/api/core/query.py:134:5: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
src/floridify/api/core/query.py:134:5: note: Use "-> None" if function does not return a value
src/floridify/api/core/query.py: note: In member "facet" of class "AggregationBuilder":
src/floridify/api/core/query.py:202:39: error: Missing type parameters for
generic type "list"  [type-arg]
        def facet(self, facets: dict[str, list]) -> "AggregationBuilder":
                                          ^
src/floridify/api/core/query.py: note: In member "__init__" of class "BulkOperationBuilder":
src/floridify/api/core/query.py:217:9: error: Need type annotation for
"operations" (hint: "operations: list[<type>] = ...")  [var-annotated]
            self.operations = []
            ^~~~~~~~~~~~~~~
src/floridify/cli/commands/config.py:12:1: error: Module
"src.floridify.utils.paths" has no attribute "get_config_path"  [attr-defined]
    from ...utils.paths import get_config_path
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/floridify/batch/apple_dictionary_extractor.py: note: In member "_process_batch" of class "AppleDictionaryBatchExtractor":
src/floridify/batch/apple_dictionary_extractor.py:171:38: error: Argument 1 to
"append" of "list" has incompatible type "ProviderData | BaseException";
expected "ProviderData"  [arg-type]
                    valid_results.append(result)
                                         ^~~~~~
src/floridify/batch/apple_dictionary_extractor.py:176:55: error: Argument 2 to
"_save_to_mongodb" of "AppleDictionaryBatchExtractor" has incompatible type
"ProviderData | BaseException"; expected "ProviderData"  [arg-type]
                        await self._save_to_mongodb(word, result)
                                                          ^~~~~~
src/floridify/api/routers/words.py:26:1: error: Module
"src.floridify.models.models" does not explicitly export attribute "Language" 
[attr-defined]
    from ...models.models import Language, Word
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/floridify/api/routers/words.py: note: In function "list_words":
src/floridify/api/routers/words.py:131:21: error: Need type annotation for
"response_data"  [var-annotated]
        response_data = ListResponse(
                        ^
src/floridify/api/routers/words.py:145:16: error: Incompatible return value
type (got "Response", expected "ListResponse[Word]")  [return-value]
            return Response(status_code=304)
                   ^~~~~~~~~~~~~~~~~~~~~~~~~
src/floridify/api/routers/words.py: note: In function "create_word":
src/floridify/api/routers/words.py:164:26: error: List item 0 has incompatible
type "dict[str, str]"; expected "ErrorDetail"  [list-item]
                    details=[{
                             ^
src/floridify/api/routers/words.py: note: In function "get_word":
src/floridify/api/routers/words.py:229:16: error: Incompatible return value
type (got "Response", expected "ResourceResponse")  [return-value]
            return Response(status_code=304)
                   ^~~~~~~~~~~~~~~~~~~~~~~~~
src/floridify/api/routers/batch_v2.py: note: In function "bulk_update_definitions":
src/floridify/api/routers/batch_v2.py:134:20: error: Item "None" of
"Definition | None" has no attribute "version"  [union-attr]
                    if current.version != update.pop("version"):
                       ^~~~~~~~~~~~~~~
src/floridify/api/routers/batch_v2.py: note: In function "bulk_delete":
src/floridify/api/routers/batch_v2.py:186:33: error: Argument 1 to
"BulkOperationBuilder" has incompatible type "ModelMetaclass"; expected
"type[Document]"  [arg-type]
        bulk = BulkOperationBuilder(model_class)
                                    ^~~~~~~~~~~
src/floridify/api/routers/atomic_updates.py: note: In member "validate_field_name" of class "AtomicFieldUpdate":
src/floridify/api/routers/atomic_updates.py:45:5: error: Function is missing a
type annotation  [no-untyped-def]
        def validate_field_name(cls, v):
        ^
src/floridify/api/routers/atomic_updates.py: note: In function "update_word_field":
src/floridify/api/routers/atomic_updates.py:76:8: error: Unsupported right
operand type for in ("Callable[[BaseModel], dict[str, FieldInfo]]")  [operator]
        if update.field in Word.__fields__:
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/floridify/api/routers/atomic_updates.py:77:22: error: Value of type
"Callable[[BaseModel], dict[str, FieldInfo]]" is not indexable  [index]
            field_info = Word.__fields__[update.field]
                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/floridify/api/routers/atomic_updates.py:111:30: error: List item 0 has
incompatible type "dict[str, str]"; expected "ErrorDetail"  [list-item]
                        details=[{
                                 ^
src/floridify/api/routers/atomic_updates.py: note: In function "update_definition_field":
src/floridify/api/routers/atomic_updates.py:144:8: error: Unsupported right
operand type for in ("Callable[[BaseModel], dict[str, FieldInfo]]")  [operator]
        if update.field in Definition.__fields__:
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/floridify/api/routers/atomic_updates.py:177:30: error: List item 0 has
incompatible type "dict[str, str]"; expected "ErrorDetail"  [list-item]
                        details=[{
                                 ^
src/floridify/api/routers/atomic_updates.py: note: In class "BatchAtomicUpdate":
src/floridify/api/routers/atomic_updates.py:197:37: error: No overload variant
of "Field" matches argument types "EllipsisType", "str", "int"  [call-overload]
        updates: list[dict[str, Any]] = Field(
                                        ^
src/floridify/api/routers/atomic_updates.py:197:37: note: Possible overload variants:
src/floridify/api/routers/atomic_updates.py:197:37: note:     def Field(default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
src/floridify/api/routers/atomic_updates.py:197:37: note:     def [_T] Field(default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
src/floridify/api/routers/atomic_updates.py:197:37: note:     def [_T] Field(*, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
src/floridify/api/routers/atomic_updates.py:197:37: note:     def Field(*, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
src/floridify/core/lookup_pipeline.py: note: In function "_get_provider_definition":
src/floridify/core/lookup_pipeline.py:275:25: error: Incompatible types in
assignment (expression has type "OxfordConnector", variable has type
"WiktionaryConnector | DictionaryComConnector | AppleDictionaryConnector | None")
 [assignment]
                connector = OxfordConnector(
                            ^
src/floridify/api/routers/facts.py: note: In class "FactGenerationRequest":
src/floridify/api/routers/facts.py:73:36: error: No overload variant of "Field"
matches argument types "None", "str", "list[str]"  [call-overload]
        categories: list[str] | None = Field(
                                       ^
src/floridify/api/routers/facts.py:73:36: note: Possible overload variants:
src/floridify/api/routers/facts.py:73:36: note:     def Field(default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
src/floridify/api/routers/facts.py:73:36: note:     def [_T] Field(default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
src/floridify/api/routers/facts.py:73:36: note:     def [_T] Field(*, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
src/floridify/api/routers/facts.py:73:36: note:     def Field(*, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
src/floridify/api/routers/facts.py: note: In function "list_facts":
src/floridify/api/routers/facts.py:130:21: error: Need type annotation for
"response_data"  [var-annotated]
        response_data = ListResponse(
                        ^
src/floridify/api/routers/facts.py:144:16: error: Incompatible return value
type (got "Response", expected "ListResponse[Fact]")  [return-value]
            return Response(status_code=304)
                   ^~~~~~~~~~~~~~~~~~~~~~~~~
src/floridify/api/routers/facts.py: note: In function "get_fact":
src/floridify/api/routers/facts.py:178:17: error: Item "None" of "Fact | None"
has no attribute "model_dump"  [union-attr]
        fact_dict = fact.model_dump()
                    ^~~~~~~~~~~~~~~
src/floridify/api/routers/facts.py:193:30: error: Item "None" of "Fact | None"
has no attribute "word_id"  [union-attr]
                "word": f"/words/{fact.word_id}",
                                 ^~~~~~~~~~~~~
src/floridify/api/routers/facts.py:203:16: error: Incompatible return value
type (got "Response", expected "ResourceResponse")  [return-value]
            return Response(status_code=304)
                   ^~~~~~~~~~~~~~~~~~~~~~~~~
src/floridify/api/routers/facts.py: note: In function "generate_facts_for_word":
src/floridify/api/routers/facts.py:267:10: error: Incompatible types in "await"
(actual type "OpenAIConnector", expected type "Awaitable[Any]")  [misc]
        ai = await get_openai_connector()
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/floridify/api/routers/facts.py:270:28: error: Unexpected keyword argument
"context_words" for "generate_facts"  [call-arg]
        fact_data_list = await generate_facts(
                               ^
src/floridify/ai/synthesis_functions.py:401:1: note: "generate_facts" defined here
src/floridify/api/routers/facts.py:291:16: error: Missing named argument
"content" for "Fact"  [call-arg]
            fact = Fact(
                   ^
src/floridify/api/routers/facts.py:294:22: error: Argument "category" to "Fact"
has incompatible type "str | None"; expected
"Literal['etymology', 'usage', 'cultural', 'linguistic', 'historical']" 
[arg-type]
                category=category,
                         ^~~~~~~~
src/floridify/api/routers/facts.py:295:64: error: Argument 2 to "get" of
"Document" has incompatible type "float"; expected "AsyncClientSession | None" 
[arg-type]
                confidence_score=fact_data.get("confidence_score", 0.8),
                                                                   ^~~
src/floridify/api/routers/examples.py: note: In function "list_examples":
src/floridify/api/routers/examples.py:125:21: error: Need type annotation for
"response_data"  [var-annotated]
        response_data = ListResponse(
                        ^
src/floridify/api/routers/examples.py:139:16: error: Incompatible return value
type (got "Response", expected "ListResponse[Example]")  [return-value]
            return Response(status_code=304)
                   ^~~~~~~~~~~~~~~~~~~~~~~~~
src/floridify/api/routers/examples.py: note: In function "get_example":
src/floridify/api/routers/examples.py:174:20: error: Item "None" of
"Example | None" has no attribute "model_dump"  [union-attr]
        example_dict = example.model_dump()
                       ^~~~~~~~~~~~~~~~~~
src/floridify/api/routers/examples.py:189:30: error: Item "None" of
"Example | None" has no attribute "word_id"  [union-attr]
                "word": f"/words/{example.word_id}",
                                 ^~~~~~~~~~~~~~~~
src/floridify/api/routers/examples.py:190:42: error: Item "None" of
"Example | None" has no attribute "definition_id"  [union-attr]
                "definition": f"/definitions/{example.definition_id}",
                                             ^~~~~~~~~~~~~~~~~~~~~~
src/floridify/api/routers/examples.py:200:16: error: Incompatible return value
type (got "Response", expected "ResourceResponse")  [return-value]
            return Response(status_code=304)
                   ^~~~~~~~~~~~~~~~~~~~~~~~~
src/floridify/api/routers/examples.py: note: In function "generate_examples":
src/floridify/api/routers/examples.py:252:10: error: Incompatible types in
"await" (actual type "OpenAIConnector", expected type "Awaitable[Any]")  [misc]
        ai = await get_openai_connector()
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/floridify/api/routers/examples.py:255:31: error: Unexpected keyword
argument "count" for "synthesize_examples"  [call-arg]
        example_data_list = await synthesize_examples(
                                  ^
src/floridify/ai/synthesis_functions.py:491:1: note: "synthesize_examples" defined here
src/floridify/api/routers/examples.py:255:31: error: Unexpected keyword
argument "context" for "synthesize_examples"  [call-arg]
        example_data_list = await synthesize_examples(
                                  ^
src/floridify/api/routers/examples.py:266:19: error: Argument after ** must be
a mapping, not "str"  [arg-type]
            example = Example(
                      ^
src/floridify/api/routers/examples.py:283:40: error: "ResourceResponse" has no
attribute "id"  [attr-defined]
        definition.example_ids.extend([str(ex.id) for ex in responses])
                                           ^~~~~
src/floridify/api/routers/definitions.py: note: In class "ComponentRegenerationRequest":
src/floridify/api/routers/definitions.py:83:28: error: No overload variant of
"Field" matches argument types "EllipsisType", "str", "list[str]" 
[call-overload]
        components: set[str] = Field(
                               ^
src/floridify/api/routers/definitions.py:83:28: note: Possible overload variants:
src/floridify/api/routers/definitions.py:83:28: note:     def Field(default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
src/floridify/api/routers/definitions.py:83:28: note:     def [_T] Field(default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
src/floridify/api/routers/definitions.py:83:28: note:     def [_T] Field(*, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
src/floridify/api/routers/definitions.py:83:28: note:     def Field(*, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
src/floridify/api/routers/definitions.py: note: In function "list_definitions":
src/floridify/api/routers/definitions.py:155:21: error: Need type annotation
for "response_data"  [var-annotated]
        response_data = ListResponse(
                        ^
src/floridify/api/routers/definitions.py:169:16: error: Incompatible return
value type (got "Response", expected "ListResponse[Definition]")  [return-value]
            return Response(status_code=304)
                   ^~~~~~~~~~~~~~~~~~~~~~~~~
src/floridify/api/routers/definitions.py: note: In function "get_definition":
src/floridify/api/routers/definitions.py:208:27: error: Item "None" of
"Definition | None" has no attribute "model_dump"  [union-attr]
            definition_data = definition.model_dump()
                              ^~~~~~~~~~~~~~~~~~~~~
src/floridify/api/routers/definitions.py:235:16: error: Incompatible return
value type (got "Response", expected "ResourceResponse")  [return-value]
            return Response(status_code=304)
                   ^~~~~~~~~~~~~~~~~~~~~~~~~
src/floridify/api/routers/definitions.py: note: In function "regenerate_components":
src/floridify/api/routers/definitions.py:298:10: error: Incompatible types in
"await" (actual type "OpenAIConnector", expected type "Awaitable[Any]")  [misc]
        ai = await get_openai_connector()
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/floridify/api/routers/definitions.py:322:26: error: List item 0 has
incompatible type "dict[str, str]"; expected "ErrorDetail"  [list-item]
                    details=[{
                             ^
src/floridify/api/routers/definitions.py:332:27: error: Item "None" of
"Definition | None" has no attribute "word_id"  [union-attr]
        word = await Word.get(definition.word_id)
                              ^~~~~~~~~~~~~~~~~~
src/floridify/api/routers/definitions.py:340:30: error: Unexpected keyword
argument "count" for "synthesize_examples"  [call-arg]
                examples = await synthesize_examples(
                                 ^
src/floridify/api/routers/definitions.py:341:29: error: Item "None" of
"Word | None" has no attribute "text"  [union-attr]
                    definition, word.text, ai, count=3
                                ^~~~~~~~~
src/floridify/ai/synthesis_functions.py:491:1: note: "synthesize_examples" defined here
src/floridify/api/routers/definitions.py:341:17: error: Argument 1 to
"synthesize_examples" has incompatible type "Definition | None"; expected
"Definition"  [arg-type]
                    definition, word.text, ai, count=3
                    ^~~~~~~~~~
src/floridify/api/routers/definitions.py:346:27: error: Argument after ** must
be a mapping, not "str"  [arg-type]
                    example = Example(
                              ^
src/floridify/api/routers/definitions.py:347:29: error: Item "None" of
"Definition | None" has no attribute "word_id"  [union-attr]
                        word_id=definition.word_id,
                                ^~~~~~~~~~~~~~~~~~
src/floridify/api/routers/definitions.py:348:39: error: Item "None" of
"Definition | None" has no attribute "id"  [union-attr]
                        definition_id=str(definition.id),
                                          ^~~~~~~~~~~~~
src/floridify/api/routers/definitions.py:353:13: error: Item "None" of
"Definition | None" has no attribute "example_ids"  [union-attr]
                definition.example_ids = [str(ex.id) for ex in example_doc...
                ^~~~~~~~~~~~~~~~~~~~~~
src/floridify/api/routers/definitions.py:358:28: error: Cannot call function of
unknown type  [operator]
                result = await func(definition, word.text, ai)
                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/floridify/api/routers/definitions.py:358:45: error: Item "None" of
"Word | None" has no attribute "text"  [union-attr]
                result = await func(definition, word.text, ai)
                                                ^~~~~~~~~
src/floridify/api/routers/definitions.py:362:17: error: Item "None" of
"Definition | None" has no attribute "cefr_level"  [union-attr]
                    definition.cefr_level = result
                    ^~~~~~~~~~~~~~~~~~~~~
src/floridify/api/routers/definitions.py:364:17: error: Item "None" of
"Definition | None" has no attribute "frequency_band"  [union-attr]
                    definition.frequency_band = result
                    ^~~~~~~~~~~~~~~~~~~~~~~~~
src/floridify/api/routers/definitions.py:366:17: error: Item "None" of
"Definition | None" has no attribute "language_register"  [union-attr]
                    definition.language_register = result
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/floridify/api/routers/definitions.py:368:17: error: Item "None" of
"Definition | None" has no attribute "domain"  [union-attr]
                    definition.domain = result
                    ^~~~~~~~~~~~~~~~~
src/floridify/api/routers/definitions.py:370:17: error: Item "None" of
"Definition | None" has no attribute "region"  [union-attr]
                    definition.region = result
                    ^~~~~~~~~~~~~~~~~
src/floridify/api/routers/definitions.py:377:5: error: Item "None" of
"Definition | None" has no attribute "version"  [union-attr]
        definition.version += 1
        ^~~~~~~~~~~~~~~~~~
src/floridify/api/routers/definitions.py:378:11: error: Item "None" of
"Definition | None" has no attribute "save"  [union-attr]
        await definition.save()
              ^~~~~~~~~~~~~~~
src/floridify/api/routers/definitions.py:381:14: error: Item "None" of
"Definition | None" has no attribute "model_dump"  [union-attr]
            data=definition.model_dump(),
                 ^~~~~~~~~~~~~~~~~~~~~
src/floridify/api/routers/definitions.py:384:24: error: Item "None" of
"Definition | None" has no attribute "version"  [union-attr]
                "version": definition.version,
                           ^~~~~~~~~~~~~~~~~~
src/floridify/api/routers/definitions.py:385:27: error: Item "None" of
"Definition | None" has no attribute "updated_at"  [union-attr]
                "updated_at": definition.updated_at,
                              ^~~~~~~~~~~~~~~~~~~~~
src/floridify/api/routers/definitions.py: note: In function "batch_regenerate_components":
src/floridify/api/routers/definitions.py:405:10: error: Incompatible types in
"await" (actual type "OpenAIConnector", expected type "Awaitable[Any]")  [misc]
        ai = await get_openai_connector()
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/floridify/api/routers/definitions.py:408:15: error: Function does not
return a value (it only ever returns None)  [func-returns-value]
        results = await enhance_definitions_parallel(
                  ^
src/floridify/api/routers/definitions.py:408:21: error: Missing positional
argument "ai" in call to "enhance_definitions_parallel"  [call-arg]
        results = await enhance_definitions_parallel(
                        ^
src/floridify/cli/commands/anki.py: note: In function "_export_async":
src/floridify/cli/commands/anki.py:152:31: error: Unexpected keyword argument
"enable_semantic" for "get_search_engine"  [call-arg]
            search_engine = await get_search_engine(
                                  ^
src/floridify/core/search_pipeline.py:28:1: note: "get_search_engine" defined here
src/floridify/api/routers/lookup.py: note: In function "_cached_lookup":
src/floridify/api/routers/lookup.py:159:23: error: Argument "pronunciation" to
"LookupResponse" has incompatible type "Pronunciation | None"; expected
"Pronunciation"  [arg-type]
            pronunciation=pronunciation,
                          ^~~~~~~~~~~~~
src/floridify/api/routers/lookup.py: note: In function "_lookup_with_tracking":
src/floridify/api/routers/lookup.py:338:23: error: Argument "pronunciation" to
"LookupResponse" has incompatible type "Pronunciation | None"; expected
"Pronunciation"  [arg-type]
            pronunciation=pronunciation,
                          ^~~~~~~~~~~~~
src/floridify/api/routers/lookup.py: note: In function "regenerate_examples":
src/floridify/api/routers/lookup.py:402:6: error: Missing type parameters for
generic type "dict"  [type-arg]
    ) -> dict:
         ^
src/floridify/api/routers/lookup.py:447:10: error: Incompatible types in
"await" (actual type "OpenAIConnector", expected type "Awaitable[Any]")  [misc]
        ai = await get_openai_connector()
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/floridify/api/routers/lookup.py:450:31: error: Unexpected keyword argument
"count" for "synthesize_examples"  [call-arg]
        example_data_list = await synthesize_examples(
                                  ^
src/floridify/ai/synthesis_functions.py:491:1: note: "synthesize_examples" defined here
src/floridify/api/routers/lookup.py:464:19: error: Argument after ** must be a
mapping, not "str"  [arg-type]
            example = Example(
                      ^
src/floridify/api/routers/batch.py: note: In function "execute_batch":
src/floridify/api/routers/batch.py:236:9: error: Name "results" already defined
on line 209  [no-redef]
            results: list[BatchResult] = []
            ^~~~~~~
src/floridify/api/routers/batch.py:245:32: error: Argument 1 to "append" of
"list" has incompatible type "BatchResult | BaseException"; expected
"BatchResult"  [arg-type]
                    results.append(result)
                                   ^~~~~~
Found 227 errors in 32 files (checked 116 source files)

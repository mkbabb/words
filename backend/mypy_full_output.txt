src/floridify/utils/logging.py:88: error: "Logger" has no attribute "_core"  [attr-defined]
src/floridify/utils/logging.py:191: error: Incompatible types in "await" (actual type "T", expected type "Awaitable[Any]")  [misc]
src/floridify/utils/logging.py:194: error: Returning Any from function declared to return "T"  [no-any-return]
src/floridify/utils/logging.py:251: error: Incompatible types in "await" (actual type "T", expected type "Awaitable[Any]")  [misc]
src/floridify/utils/logging.py:253: error: Returning Any from function declared to return "T"  [no-any-return]
src/floridify/text/processor.py:15: error: Cannot find implementation or library stub for module named "spacy"  [import-not-found]
src/floridify/text/processor.py:16: error: Cannot find implementation or library stub for module named "spacy.language"  [import-not-found]
src/floridify/text/processor.py:23: error: Skipping analyzing "nltk": module is installed, but missing library stubs or py.typed marker  [import-untyped]
src/floridify/text/processor.py:111: error: Function is missing a return type annotation  [no-untyped-def]
src/floridify/text/processor.py:111: note: Use "-> None" if function does not return a value
src/floridify/text/processor.py:125: error: Skipping analyzing "nltk.stem": module is installed, but missing library stubs or py.typed marker  [import-untyped]
src/floridify/text/processor.py:126: error: Skipping analyzing "nltk.tokenize": module is installed, but missing library stubs or py.typed marker  [import-untyped]
src/floridify/text/processor.py:142: error: Returning Any from function declared to return "list[str]"  [no-any-return]
src/floridify/text/processor.py:149: error: Returning Any from function declared to return "str"  [no-any-return]
src/floridify/text/processor.py:206: error: Call to untyped function "NLTKProcessor" in typed context  [no-untyped-call]
src/floridify/search/semantic.py:19: error: Invalid "type: ignore" comment  [syntax]
src/floridify/search/semantic.py:19: error: Cannot find implementation or library stub for module named "faiss"  [import-not-found]
src/floridify/search/semantic.py:20: error: Cannot find implementation or library stub for module named "numpy"  [import-not-found]
src/floridify/search/semantic.py:21: error: Cannot find implementation or library stub for module named "sentence_transformers"  [import-not-found]
src/floridify/search/semantic.py:22: error: Invalid "type: ignore" comment  [syntax]
src/floridify/search/semantic.py:24: error: Cannot find implementation or library stub for module named "sklearn.feature_extraction.text"  [import-not-found]
src/floridify/search/semantic.py:25: error: Invalid "type: ignore" comment  [syntax]
src/floridify/search/semantic.py:27: error: Cannot find implementation or library stub for module named "sklearn.metrics.pairwise"  [import-not-found]
src/floridify/search/semantic.py:28: error: Invalid "type: ignore" comment  [syntax]
src/floridify/search/semantic.py:51: error: Function is missing a type annotation  [no-untyped-def]
src/floridify/text/normalizer.py:9: error: Skipping analyzing "contractions": module is installed, but missing library stubs or py.typed marker  [import-untyped]
src/floridify/batch/word_filter.py:9: error: Skipping analyzing "nltk": module is installed, but missing library stubs or py.typed marker  [import-untyped]
src/floridify/batch/word_filter.py:10: error: Skipping analyzing "nltk.corpus": module is installed, but missing library stubs or py.typed marker  [import-untyped]
src/floridify/list/parser.py:9: error: Skipping analyzing "coolname": module is installed, but missing library stubs or py.typed marker  [import-untyped]
src/floridify/storage/mongodb.py:131: error: "Callable[[], ClientOptions]" has no attribute "pool_options"  [attr-defined]
src/floridify/storage/mongodb.py:269: error: Incompatible return value type (got "MongoDBStorage | None", expected "MongoDBStorage")  [return-value]
src/floridify/api/routers/search.py:102: error: Argument "results" to "SearchResponse" has incompatible type "list[dict[str, object]]"; expected "list[SearchResponseItem]"  [arg-type]
src/floridify/api/middleware/field_selection.py:90: error: Returning Any from function declared to return "dict[str, Any]"  [no-any-return]
src/floridify/api/middleware/field_selection.py:113: error: "ModelMetaclass" has no attribute "get"  [attr-defined]
src/floridify/api/middleware/field_selection.py:121: error: Returning Any from function declared to return "dict[str, Any]"  [no-any-return]
src/floridify/connectors/wiktionary.py:10: error: Skipping analyzing "wikitextparser": module is installed, but missing library stubs or py.typed marker  [import-untyped]
src/floridify/connectors/wiktionary.py:364: error: Missing named argument "frequency_band" for "Definition"  [call-arg]
src/floridify/connectors/wiktionary.py:509: error: Missing named argument "word_id" for "Pronunciation"  [call-arg]
src/floridify/connectors/oxford.py:251: error: Missing named argument "frequency_band" for "Definition"  [call-arg]
src/floridify/connectors/oxford.py:259: error: Argument "language_register" to "Definition" has incompatible type "str | None"; expected "Literal['formal', 'informal', 'neutral', 'slang', 'technical'] | None"  [arg-type]
src/floridify/connectors/apple_dictionary.py:65: error: Skipping analyzing "CoreServices": module is installed, but missing library stubs or py.typed marker  [import-untyped]
src/floridify/connectors/apple_dictionary.py:96: error: "None" not callable  [misc]
src/floridify/connectors/apple_dictionary.py:97: error: Returning Any from function declared to return "str | None"  [no-any-return]
src/floridify/connectors/apple_dictionary.py:270: error: "AppleDictionaryConnector" has no attribute "_parse_apple_definition"  [attr-defined]
src/floridify/connectors/apple_dictionary.py:277: error: Missing named argument "word_id" for "ProviderData"  [call-arg]
src/floridify/connectors/apple_dictionary.py:277: error: Missing named argument "provider" for "ProviderData"  [call-arg]
src/floridify/connectors/apple_dictionary.py:363: error: "AppleDictionaryConnector" has no attribute "_parse_apple_definition"  [attr-defined]
src/floridify/connectors/apple_dictionary.py:370: error: Missing named argument "frequency_band" for "Definition"  [call-arg]
src/floridify/api/routers/words.py:92: error: Argument "word_forms" to "Word" has incompatible type "list[dict[str, Any]]"; expected "list[WordForm]"  [arg-type]
src/floridify/api/routers/words.py:172: error: Incompatible types in assignment (expression has type "list[dict[str, dict[str, str]]]", target has type "str")  [assignment]
src/floridify/ai/connector.py:158: error: Returning Any from function declared to return "T"  [no-any-return]
src/floridify/cli/commands/database.py:12: error: Module "src.floridify.models.models" has no attribute "DictionaryEntry"  [attr-defined]
src/floridify/batch/apple_dictionary_extractor.py:176: error: Argument 2 to "_save_to_mongodb" of "AppleDictionaryBatchExtractor" has incompatible type "ProviderData | BaseException"; expected "ProviderData"  [arg-type]
src/floridify/batch/apple_dictionary_extractor.py:181: error: Incompatible return value type (got "list[ProviderData | BaseException]", expected "list[ProviderData]")  [return-value]
src/floridify/batch/apple_dictionary_extractor.py:216: error: Missing named argument "word_id" for "SynthesizedDictionaryEntry"  [call-arg]
src/floridify/batch/apple_dictionary_extractor.py:216: error: Missing named argument "model_info" for "SynthesizedDictionaryEntry"  [call-arg]
src/floridify/batch/apple_dictionary_extractor.py:228: error: "MongoDBStorage" has no attribute "save_entry"  [attr-defined]
src/floridify/anki/generator.py:11: error: Skipping analyzing "genanki": module is installed, but missing library stubs or py.typed marker  [import-untyped]
src/floridify/anki/generator.py:11: note: See https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-imports
src/floridify/anki/generator.py:15: error: Module "src.floridify.models" has no attribute "DictionaryEntry"  [attr-defined]
src/floridify/anki/generator.py:99: error: Returning Any from function declared to return "list[Definition]"  [no-any-return]
src/floridify/anki/generator.py:104: error: Returning Any from function declared to return "list[Definition]"  [no-any-return]
src/floridify/ai/synthesis_functions.py:40: error: Returning Any from function declared to return "Pronunciation | None"  [no-any-return]
src/floridify/ai/synthesis_functions.py:46: error: Argument "word_id" to "Pronunciation" has incompatible type "PydanticObjectId | None"; expected "str"  [arg-type]
src/floridify/ai/synthesis_functions.py:105: error: Argument "form_type" to "WordForm" has incompatible type "str"; expected "Literal['plural', 'past', 'past_participle', 'present_participle', 'comparative', 'superlative', 'variant']"  [arg-type]
src/floridify/ai/synthesis_functions.py:180: error: Returning Any from function declared to return "str | None"  [no-any-return]
src/floridify/ai/synthesis_functions.py:251: error: Argument "text" to "Collocation" has incompatible type "str | float"; expected "str"  [arg-type]
src/floridify/ai/synthesis_functions.py:252: error: Argument "type" to "Collocation" has incompatible type "str | float"; expected "Literal['adjective', 'verb', 'noun', 'adverb', 'preposition']"  [arg-type]
src/floridify/ai/synthesis_functions.py:253: error: Argument "frequency" to "Collocation" has incompatible type "str | float"; expected "float"  [arg-type]
src/floridify/ai/synthesis_functions.py:276: error: Argument "type" to "UsageNote" has incompatible type "str"; expected "Literal['grammar', 'confusion', 'regional', 'register', 'error']"  [arg-type]
src/floridify/ai/synthesis_functions.py:327: error: Argument "word_id" to "Fact" has incompatible type "PydanticObjectId | None"; expected "str"  [arg-type]
src/floridify/ai/synthesis_functions.py:329: error: Argument "category" to "Fact" has incompatible type "str"; expected "Literal['etymology', 'usage', 'cultural', 'linguistic', 'historical']"  [arg-type]
src/floridify/ai/synthesis_functions.py:330: error: Argument "model_info" to "Fact" has incompatible type "dict[str, object]"; expected "ModelInfo | None"  [arg-type]
src/floridify/ai/synthesis_functions.py:405: error: Need type annotation for "provider_data" (hint: "provider_data: list[<type>] = ...")  [var-annotated]
src/floridify/ai/synthesis_functions.py:409: error: Argument 1 to "append" of "list" has incompatible type "Coroutine[Any, Any, list[WordForm]]"; expected "Coroutine[Any, Any, Etymology | None]"  [arg-type]
src/floridify/ai/synthesis_functions.py:421: error: Argument 1 to "append" of "list" has incompatible type "Coroutine[Any, Any, list[str]]"; expected "Coroutine[Any, Any, Etymology | None]"  [arg-type]
src/floridify/ai/synthesis_functions.py:424: error: Argument 1 to "append" of "list" has incompatible type "Coroutine[Any, Any, str | None]"; expected "Coroutine[Any, Any, Etymology | None]"  [arg-type]
src/floridify/ai/synthesis_functions.py:430: error: Argument 1 to "append" of "list" has incompatible type "Coroutine[Any, Any, list[Fact]]"; expected "Coroutine[Any, Any, Etymology | None]"  [arg-type]
src/floridify/ai/synthesizer.py:146: error: Argument "word_id" to "SynthesizedDictionaryEntry" has incompatible type "PydanticObjectId | None"; expected "str"  [arg-type]
src/floridify/ai/synthesizer.py:147: error: Argument "pronunciation_id" to "SynthesizedDictionaryEntry" has incompatible type "PydanticObjectId | None"; expected "str | None"  [arg-type]
src/floridify/ai/synthesizer.py:148: error: List comprehension has incompatible type List[PydanticObjectId | None]; expected List[str]  [misc]
src/floridify/ai/synthesizer.py:150: error: List comprehension has incompatible type List[PydanticObjectId | None]; expected List[str]  [misc]
src/floridify/ai/synthesizer.py:156: error: List comprehension has incompatible type List[PydanticObjectId | None]; expected List[str]  [misc]
src/floridify/ai/synthesizer.py:209: error: Argument "order" to "MeaningCluster" has incompatible type "float"; expected "int"  [arg-type]
src/floridify/ai/synthesizer.py:237: error: Argument "word_id" to "Pronunciation" has incompatible type "PydanticObjectId | None"; expected "str"  [arg-type]
src/floridify/ai/synthesizer.py:321: error: Missing named argument "frequency_band" for "Definition"  [call-arg]
src/floridify/ai/synthesizer.py:322: error: Argument "word_id" to "Definition" has incompatible type "PydanticObjectId | None"; expected "str"  [arg-type]
src/floridify/ai/synthesizer.py:335: error: Argument "definition_id" to "Example" has incompatible type "PydanticObjectId | None"; expected "str"  [arg-type]
src/floridify/ai/synthesizer.py:345: error: Argument 1 to "append" of "list" has incompatible type "PydanticObjectId | None"; expected "str"  [arg-type]
src/floridify/ai/synthesizer.py:491: error: Missing named argument "frequency_band" for "Definition"  [call-arg]
src/floridify/ai/synthesizer.py:492: error: Argument "word_id" to "Definition" has incompatible type "PydanticObjectId | None"; expected "str"  [arg-type]
src/floridify/ai/synthesizer.py:511: error: Argument "definition_id" to "Example" has incompatible type "PydanticObjectId | None"; expected "str"  [arg-type]
src/floridify/ai/synthesizer.py:521: error: Argument 1 to "append" of "list" has incompatible type "PydanticObjectId | None"; expected "str"  [arg-type]
src/floridify/ai/synthesizer.py:528: error: Argument "word_id" to "ProviderData" has incompatible type "PydanticObjectId | None"; expected "str"  [arg-type]
src/floridify/ai/synthesizer.py:530: error: List comprehension has incompatible type List[PydanticObjectId | None]; expected List[str]  [misc]
src/floridify/api/routers/definitions.py:60: error: Incompatible default for argument "updates" (default has type "EllipsisType", argument has type "DefinitionUpdate")  [assignment]
src/floridify/api/routers/definitions.py:65: error: "Coroutine[Any, Any, MongoDBStorage]" has no attribute "get_synthesized_entry"  [attr-defined]
src/floridify/api/routers/definitions.py:85: error: "Coroutine[Any, Any, MongoDBStorage]" has no attribute "save_synthesized_entry"  [attr-defined]
src/floridify/api/routers/definitions.py:102: error: Missing named argument "context" for "ExampleRegenerationRequest"  [call-arg]
src/floridify/api/routers/definitions.py:107: error: "Coroutine[Any, Any, MongoDBStorage]" has no attribute "get_synthesized_entry"  [attr-defined]
src/floridify/api/routers/definitions.py:119: error: Unexpected keyword argument "context" for "examples" of "OpenAIConnector"  [call-arg]
src/floridify/api/routers/definitions.py:130: error: Module "src.floridify.models" has no attribute "GeneratedExample"  [attr-defined]
src/floridify/ai/connector.py:217: note: "examples" of "OpenAIConnector" defined here
src/floridify/api/routers/definitions.py:135: error: "Coroutine[Any, Any, MongoDBStorage]" has no attribute "save_synthesized_entry"  [attr-defined]
src/floridify/api/routers/batch.py:31: error: No overload variant of "Field" matches argument types "EllipsisType", "int", "int", "str"  [call-overload]
src/floridify/api/routers/batch.py:31: note: Possible overload variants:
src/floridify/api/routers/batch.py:31: note:     def Field(default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
src/floridify/api/routers/batch.py:31: note:     def [_T] Field(default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
src/floridify/api/routers/batch.py:31: note:     def [_T] Field(*, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
src/floridify/api/routers/batch.py:31: note:     def Field(*, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
src/floridify/api/routers/batch.py:66: error: No overload variant of "Field" matches argument types "EllipsisType", "int", "int", "str"  [call-overload]
src/floridify/api/routers/batch.py:66: note: Possible overload variants:
src/floridify/api/routers/batch.py:66: note:     def Field(default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
src/floridify/api/routers/batch.py:66: note:     def [_T] Field(default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
src/floridify/api/routers/batch.py:66: note:     def [_T] Field(*, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
src/floridify/api/routers/batch.py:66: note:     def Field(*, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
src/floridify/api/routers/batch.py:88: error: No overload variant of "Field" matches argument types "EllipsisType", "int", "int"  [call-overload]
src/floridify/api/routers/batch.py:88: note: Possible overload variants:
src/floridify/api/routers/batch.py:88: note:     def Field(default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
src/floridify/api/routers/batch.py:88: note:     def [_T] Field(default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
src/floridify/api/routers/batch.py:88: note:     def [_T] Field(*, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
src/floridify/api/routers/batch.py:88: note:     def Field(*, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
src/floridify/api/routers/batch.py:147: error: "MongoDBStorage" has no attribute "get_synthesized_entry"  [attr-defined]
src/floridify/api/routers/batch.py:174: error: "MongoDBStorage" has no attribute "save_synthesized_entry"  [attr-defined]
src/floridify/api/routers/batch.py:256: error: Generator has incompatible item type "int"; expected "bool"  [misc]
src/floridify/api/routers/batch.py:256: error: Item "BaseException" of "BatchResult | BaseException" has no attribute "status"  [union-attr]
src/floridify/api/routers/batch.py:257: error: Generator has incompatible item type "int"; expected "bool"  [misc]
src/floridify/api/routers/batch.py:257: error: Item "BaseException" of "BatchResult | BaseException" has no attribute "status"  [union-attr]
src/floridify/api/routers/batch.py:260: error: Argument "results" to "BatchResponse" has incompatible type "list[BatchResult | BaseException]"; expected "list[BatchResult]"  [arg-type]
Found 111 errors in 21 files (checked 102 source files)

scripts/analyze_corpus_optimization.py:16:1: error: Skipping analyzing "nltk":
module is installed, but missing library stubs or py.typed marker 
[import-untyped]
        import nltk
    ^
scripts/analyze_corpus_optimization.py:17:1: error: Skipping analyzing
"nltk.stem": module is installed, but missing library stubs or py.typed marker 
[import-untyped]
        from nltk.stem import PorterStemmer, SnowballStemmer, WordNetLemma...
    ^
scripts/analyze_corpus_optimization.py:17:1: note: See https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-imports
scripts/analyze_corpus_optimization.py:18:1: error: Skipping analyzing
"nltk.corpus": module is installed, but missing library stubs or py.typed marker
 [import-untyped]
        from nltk.corpus import wordnet
    ^
scripts/analyze_corpus_optimization.py:30:1: error: Cannot find implementation
or library stub for module named "spacy"  [import-not-found]
        import spacy
    ^
scripts/analyze_corpus_optimization.py:40:5: error: Function is missing a
return type annotation  [no-untyped-def]
        def __init__(self):
        ^
scripts/analyze_corpus_optimization.py:40:5: note: Use "-> None" if function does not return a value
scripts/analyze_corpus_optimization.py:43:5: error: Function is missing a
return type annotation  [no-untyped-def]
        def setup_nlp_tools(self):
        ^
scripts/analyze_corpus_optimization.py:43:5: note: Use "-> None" if function does not return a value
scripts/analyze_corpus_optimization.py:63:77: error: Function "builtins.any" is
not valid as a type  [valid-type]
    ...lyze_morphological_patterns(self, words: List[str]) -> Dict[str, any]:
                                                                        ^
scripts/analyze_corpus_optimization.py:63:77: note: Perhaps you meant "typing.Any" instead of "any"?
scripts/analyze_corpus_optimization.py:97:13: error: Value of type "object" is
not indexable  [index]
                analysis['length_distribution'][len(word)] += 1
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
scripts/analyze_corpus_optimization.py:97:13: error: Unsupported target for
indexed assignment ("object")  [index]
                analysis['length_distribution'][len(word)] += 1
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
scripts/analyze_corpus_optimization.py:101:21: error: Value of type "object" is
not indexable  [index]
                        analysis['suffix_patterns'][suffix] += 1
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
scripts/analyze_corpus_optimization.py:101:21: error: Unsupported target for
indexed assignment ("object")  [index]
                        analysis['suffix_patterns'][suffix] += 1
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
scripts/analyze_corpus_optimization.py:103:21: error: Value of type "object" is
not indexable  [index]
                        analysis['inflection_groups'][base].append((word, ...
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
scripts/analyze_corpus_optimization.py:107:97: error: Function "builtins.any"
is not valid as a type  [valid-type]
    ...ds(self, words: List[str], sample_size: int = 5000) -> Dict[str, any]:
                                                                        ^
scripts/analyze_corpus_optimization.py:107:97: note: Perhaps you meant "typing.Any" instead of "any"?
scripts/analyze_corpus_optimization.py:258:37: error: any? has no attribute
"items"  [attr-defined]
            for suffix, count in sorted(morph_analysis['suffix_patterns']....
                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
scripts/analyze_corpus_optimization.py:265:21: error: any? has no attribute
"get"  [attr-defined]
                count = morph_analysis['length_distribution'].get(length, ...
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
scripts/analyze_corpus_optimization.py:277:21: error: Value of type any? is not
indexable  [index]
                print(f"{result['method']}:")
                        ^~~~~~~~~~~~~~~~~
scripts/analyze_corpus_optimization.py:278:33: error: Value of type any? is not
indexable  [index]
                print(f"  Original: {result['original']:,} words")
                                    ^~~~~~~~~~~~~~~~~~~
scripts/analyze_corpus_optimization.py:279:33: error: Value of type any? is not
indexable  [index]
                print(f"  Reduced:  {result['reduced']:,} words")
                                    ^~~~~~~~~~~~~~~~~~
scripts/analyze_corpus_optimization.py:280:34: error: Value of type any? is not
indexable  [index]
                print(f"  Reduction: {result['reduction_pct']:.1f}%\n")
                                     ^~~~~~~~~~~~~~~~~~~~~~~~
scripts/analyze_corpus_optimization.py:296:30: error: Value of type any? is not
indexable  [index]
                reduction_rate = result['reduction_pct'] / 100
                                 ^~~~~~~~~~~~~~~~~~~~~~~
scripts/analyze_corpus_optimization.py:298:23: error: Value of type any? is not
indexable  [index]
                print(f"  {result['method']}: ~{projected_size:,} words")
                          ^~~~~~~~~~~~~~~~~
scripts/corpus_optimization_report.py:21:41: error: Missing type parameters for
generic type "Dict"  [type-arg]
    def analyze_corpus(words: List[str]) -> Dict:
                                            ^
scripts/corpus_optimization_report.py:33:9: error: Value of type "object" is
not indexable  [index]
            analysis['length_distribution'][len(word)] += 1
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
scripts/corpus_optimization_report.py:33:9: error: Unsupported target for
indexed assignment ("object")  [index]
            analysis['length_distribution'][len(word)] += 1
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
scripts/corpus_optimization_report.py:37:13: error: Value of type "object" is
not indexable  [index]
                analysis['common_endings'][word[-3:]] += 1
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
scripts/corpus_optimization_report.py:37:13: error: Unsupported target for
indexed assignment ("object")  [index]
                analysis['common_endings'][word[-3:]] += 1
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
scripts/corpus_optimization_report.py:39:13: error: Value of type "object" is
not indexable  [index]
                analysis['common_endings'][word[-4:]] += 1
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
scripts/corpus_optimization_report.py:39:13: error: Unsupported target for
indexed assignment ("object")  [index]
                analysis['common_endings'][word[-4:]] += 1
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
scripts/corpus_optimization_report.py:50:21: error: Value of type "object" is
not indexable  [index]
                        analysis['potential_inflections'][potential_base]....
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
scripts/corpus_optimization_report.py:55:48: error: Missing type parameters for
generic type "Dict"  [type-arg]
    def calculate_optimization_potential(analysis: Dict) -> Dict:
                                                   ^
scripts/corpus_optimization_report.py:93:35: error: Missing type parameters for
generic type "Dict"  [type-arg]
    def generate_recommendations() -> Dict:
                                      ^
scripts/corpus_optimization_report.py:249:1: error: Function is missing a
return type annotation  [no-untyped-def]
    def main():
    ^
scripts/corpus_optimization_report.py:249:1: note: Use "-> None" if function does not return a value
scripts/process_corpus.py:10:1: error: Skipping analyzing "nltk": module is
installed, but missing library stubs or py.typed marker  [import-untyped]
    import nltk
    ^
scripts/process_corpus.py:11:1: error: Skipping analyzing "nltk.corpus": module
is installed, but missing library stubs or py.typed marker  [import-untyped]
    from nltk.corpus import wordnet
    ^
scripts/process_corpus.py:12:1: error: Skipping analyzing "nltk.stem": module
is installed, but missing library stubs or py.typed marker  [import-untyped]
    from nltk.stem import WordNetLemmatizer
    ^
scripts/process_corpus.py:57:13: error: Returning Any from function declared to
return "str"  [no-any-return]
                return wordnet.VERB
                ^~~~~~~~~~~~~~~~~~~
scripts/process_corpus.py:59:13: error: Returning Any from function declared to
return "str"  [no-any-return]
                return wordnet.ADV
                ^~~~~~~~~~~~~~~~~~
scripts/process_corpus.py:61:13: error: Returning Any from function declared to
return "str"  [no-any-return]
                return wordnet.ADJ
                ^~~~~~~~~~~~~~~~~~
scripts/process_corpus.py:63:13: error: Returning Any from function declared to
return "str"  [no-any-return]
                return wordnet.NOUN
                ^~~~~~~~~~~~~~~~~~~
scripts/process_corpus.py:101:5: error: Function is missing a return type
annotation  [no-untyped-def]
        async def process_corpus(self):
        ^
scripts/process_corpus.py:101:5: note: Use "-> None" if function does not return a value
scripts/process_corpus.py:131:21: error: Value of type "object" is not
indexable  [index]
                        self.stats["inflection_types"][inflection_type] +=...
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
scripts/process_corpus.py:131:21: error: Unsupported target for indexed
assignment ("object")  [index]
                        self.stats["inflection_types"][inflection_type] +=...
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
scripts/process_corpus.py:141:5: error: Function is missing a return type
annotation  [no-untyped-def]
        def save_results(self):
        ^
scripts/process_corpus.py:141:5: note: Use "-> None" if function does not return a value
scripts/process_corpus.py:158:46: error: No overload variant of "dict" matches
argument type "object"  [call-overload]
                stats_dict["inflection_types"] = dict(self.stats["inflecti...
                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~...
scripts/process_corpus.py:158:46: note: Possible overload variants:
scripts/process_corpus.py:158:46: note:     def [_KT, _VT] dict(self) -> dict[_KT, _VT]
scripts/process_corpus.py:158:46: note:     def [_KT, _VT] dict(self, **kwargs: _VT) -> dict[str, _VT]
scripts/process_corpus.py:158:46: note:     def [_KT, _VT] dict(self, SupportsKeysAndGetItem[_KT, _VT], /) -> dict[_KT, _VT]
scripts/process_corpus.py:158:46: note:     def [_KT, _VT] dict(self, SupportsKeysAndGetItem[str, _VT], /, **kwargs: _VT) -> dict[str, _VT]
scripts/process_corpus.py:158:46: note:     def [_KT, _VT] dict(self, Iterable[tuple[_KT, _VT]], /) -> dict[_KT, _VT]
scripts/process_corpus.py:158:46: note:     def [_KT, _VT] dict(self, Iterable[tuple[str, _VT]], /, **kwargs: _VT) -> dict[str, _VT]
scripts/process_corpus.py:158:46: note:     def [_KT, _VT] dict(self, Iterable[list[str]], /) -> dict[str, str]
scripts/process_corpus.py:158:46: note:     def [_KT, _VT] dict(self, Iterable[list[bytes]], /) -> dict[bytes, bytes]
scripts/process_corpus.py:163:5: error: Function is missing a return type
annotation  [no-untyped-def]
        def display_statistics(self):
        ^
scripts/process_corpus.py:187:37: error: "object" has no attribute "values" 
[attr-defined]
                total_inflections = sum(self.stats["inflection_types"].val...
                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
scripts/process_corpus.py:189:17: error: "object" has no attribute "items" 
[attr-defined]
                    self.stats["inflection_types"].items(),
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
scripts/process_corpus.py:203:1: error: Function is missing a return type
annotation  [no-untyped-def]
    async def main():
    ^
scripts/process_corpus.py:203:1: note: Use "-> None" if function does not return a value
scripts/corpus_optimization_strategy.py:19:1: error: Cannot find implementation
or library stub for module named "floridify.text.processor"  [import-not-found]
    from floridify.text.processor import TextProcessor, get_text_processor
    ^
scripts/corpus_optimization_strategy.py:20:1: error: Cannot find implementation
or library stub for module named "floridify.text.normalizer"  [import-not-found]
    from floridify.text.normalizer import normalize_text
    ^
scripts/corpus_optimization_strategy.py:21:1: error: Cannot find implementation
or library stub for module named "floridify.utils.logging"  [import-not-found]
    from floridify.utils.logging import get_logger
    ^
scripts/corpus_optimization_strategy.py:29:5: error: Function is missing a
return type annotation  [no-untyped-def]
        def __init__(self):
        ^
scripts/corpus_optimization_strategy.py:29:5: note: Use "-> None" if function does not return a value
scripts/corpus_optimization_strategy.py:33:32: error: Missing type parameters
for generic type "Dict"  [type-arg]
            self.analysis_results: Dict = {}
                                   ^
scripts/corpus_optimization_strategy.py:109:48: error: Function "builtins.any"
is not valid as a type  [valid-type]
        def estimate_base_forms(self) -> Dict[str, any]:
                                                   ^
scripts/corpus_optimization_strategy.py:109:48: note: Perhaps you meant "typing.Any" instead of "any"?
scripts/corpus_optimization_strategy.py:295:45: error: Value of type any? is
not indexable  [index]
                print(f"  Estimated base forms: {results['base_forms']:,}"...
                                                ^~~~~~~~~~~~~~~~~~~~~~
scripts/corpus_optimization_strategy.py:296:34: error: Value of type any? is
not indexable  [index]
                print(f"  Reduction: {results['reduction_pct']:.1f}%")
                                     ^~~~~~~~~~~~~~~~~~~~~~~~~
scripts/corpus_optimization_strategy.py:297:16: error: any? has no attribute
"__iter__" (not iterable)  [attr-defined]
                if 'sample_mappings' in results:
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
scripts/corpus_optimization_strategy.py:299:47: error: Value of type any? is
not indexable  [index]
                    for base, inflections in list(results['sample_mappings...
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~
scripts/corpus_optimization_strategy.py:402:1: error: Function is missing a
return type annotation  [no-untyped-def]
    async def main():
    ^
scripts/corpus_optimization_strategy.py:402:1: note: Use "-> None" if function does not return a value
scripts/frequency_analyzer.py:18:1: error: Cannot find implementation or
library stub for module named "aiohttp"  [import-not-found]
    import aiohttp
    ^
scripts/frequency_analyzer.py:19:1: error: Skipping analyzing "nltk": module is
installed, but missing library stubs or py.typed marker  [import-untyped]
    import nltk
    ^
scripts/frequency_analyzer.py:20:1: error: Skipping analyzing "nltk.stem":
module is installed, but missing library stubs or py.typed marker 
[import-untyped]
    from nltk.stem import WordNetLemmatizer
    ^
scripts/frequency_analyzer.py:230:9: error: Need type annotation for
"frequencies"  [var-annotated]
            frequencies = defaultdict(int)
            ^~~~~~~~~~~
scripts/frequency_analyzer.py:267:9: error: Need type annotation for "combined"
 [var-annotated]
            combined = defaultdict(float)
            ^~~~~~~~
scripts/frequency_analyzer.py:302:5: error: Function is missing a return type
annotation  [no-untyped-def]
        async def analyze(self, custom_weights: Optional[Dict[str, float]]...
        ^
scripts/frequency_analyzer.py:376:5: error: Function is missing a return type
annotation  [no-untyped-def]
        def display_statistics(self, frequencies: Dict[str, float], word_l...
        ^
scripts/frequency_analyzer.py:395:9: error: Need type annotation for
"all_words" (hint: "all_words: set[<type>] = ...")  [var-annotated]
            all_words = set()
            ^~~~~~~~~
scripts/frequency_analyzer.py:418:5: error: Function is missing a return type
annotation  [no-untyped-def]
        def integrate_with_corpus_processor(self, corpus_processor_output:...
        ^
scripts/frequency_analyzer.py:441:1: error: Function is missing a return type
annotation  [no-untyped-def]
    async def main():
    ^
scripts/frequency_analyzer.py:441:1: note: Use "-> None" if function does not return a value
src/floridify/api/examples/update_endpoint_example.py:107:1: error: Function is
missing a return type annotation  [no-untyped-def]
    def update_lookup_endpoint_example():
    ^
src/floridify/api/examples/update_endpoint_example.py:107:1: note: Use "-> None" if function does not return a value
src/floridify/api/examples/update_endpoint_example.py:144:5: error: Function is
missing a return type annotation  [no-untyped-def]
        def __init__(self):
        ^
src/floridify/api/examples/update_endpoint_example.py:144:5: note: Use "-> None" if function does not return a value
src/floridify/api/examples/update_endpoint_example.py:180:1: error: Function is
missing a return type annotation  [no-untyped-def]
    def custom_dedup_key_example():
    ^
src/floridify/api/examples/update_endpoint_example.py:190:5: error: Function is
missing a return type annotation  [no-untyped-def]
        def selective_key(word: str, include_etymology: bool = False, debu...
        ^
src/floridify/api/examples/update_endpoint_example.py:195:5: error: Function is
missing a return type annotation  [no-untyped-def]
        def normalized_key(query: str, limit: int = 10):
        ^
src/floridify/api/examples/update_endpoint_example.py:200:5: error: Function is
missing a return type annotation  [no-untyped-def]
        def time_bucketed_key(user_id: str, bucket_minutes: int = 5):
        ^
src/floridify/api/examples/deduplication_example.py:102:5: error: Function is
missing a return type annotation  [no-untyped-def]
        def __init__(self):
        ^
src/floridify/api/examples/deduplication_example.py:102:5: note: Use "-> None" if function does not return a value
src/floridify/api/examples/deduplication_example.py:122:9: error: Returning Any
from function declared to return "dict[str, Any]"  [no-any-return]
            return await future
            ^~~~~~~~~~~~~~~~~~~
src/floridify/api/examples/deduplication_example.py:180:2: error: Name
"deduplicated" is not defined  [name-defined]
    @deduplicated(
     ^~~~~~~~~~~~
src/floridify/api/examples/deduplication_example.py:180:2: error: Untyped
decorator makes function "get_external_data" untyped  [misc]
    @deduplicated(
     ^
src/floridify/ai/definition_serializer.py:25:34: error: Incompatible types in
assignment (expression has type "list[str]", target has type "str") 
[assignment]
            serialized["synonyms"] = definition.synonyms[:5]
                                     ^~~~~~~~~~~~~~~~~~~~~~~
src/floridify/ai/definition_serializer.py:30:38: error: Incompatible types in
assignment (expression has type "bool", target has type "str")  [assignment]
            serialized["has_examples"] = True
                                         ^~~~
src/floridify/connectors/wiktionary.py:702:9: error: Returning Any from
function declared to return "list[Definition]"  [no-any-return]
            return raw_data.get("definitions", [])
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/floridify/connectors/oxford.py:261:55: error: Argument "language_register"
to "Definition" has incompatible type "str | None"; expected
"Literal['formal', 'informal', 'neutral', 'slang', 'technical'] | None" 
[arg-type]
                                        language_register=register,
                                                          ^~~~~~~~
src/floridify/api/core/query.py:109:68: error: Argument 2 to "create_index" of
"AgnosticCollection" has incompatible type "**dict[str, bool]"; expected
"AgnosticClientSession | None"  [arg-type]
    ...           index_name = await collection.create_index(keys, **options)
                                                                     ^~~~~~~
src/floridify/api/core/query.py:273:46: error: Argument 1 to "bulk_write" of
"AgnosticCollection" has incompatible type "list[dict[str, Any]]"; expected
"Sequence[InsertOne[Any] | DeleteOne | DeleteMany | ReplaceOne[Any] | UpdateOne | UpdateMany]"
 [arg-type]
            result = await collection.bulk_write(self.operations)
                                                 ^~~~~~~~~~~~~~~
src/floridify/ai/templates.py:75:27: error: Incompatible types in assignment
(expression has type "list[dict[str, Any]]", variable has type
"list[Definition]")  [assignment]
                definitions = prepare_definitions_for_synthesis(definition...
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/floridify/ai/connector.py:151:24: error: Redundant cast to "T" 
[redundant-cast]
                    return cast(T, result)
                           ^
scripts/batch_cli.py:14:1: error: Skipping analyzing "src.floridify.batch":
module is installed, but missing library stubs or py.typed marker 
[import-untyped]
    from src.floridify.batch import BatchJobConfig, BatchProcessor, Filter...
    ^
scripts/batch_cli.py:15:1: error: Skipping analyzing
"src.floridify.batch.scheduler": module is installed, but missing library stubs
or py.typed marker  [import-untyped]
    from src.floridify.batch.scheduler import BatchScheduler, ScheduleFreq...
    ^
scripts/batch_cli.py:27:20: error: Missing positional argument "api_key" in
call to "OpenAIConnector"  [call-arg]
        ai_connector = AIConnector()
                       ^~~~~~~~~~~~~
scripts/batch_cli.py:34:21: error: Unexpected keyword argument "languages" for
"SearchEngine"  [call-arg]
        search_engine = SearchEngine(languages=["en"], enable_semantic=Fal...
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
scripts/batch_cli.py:34:21: error: Unexpected keyword argument
"enable_semantic" for "SearchEngine"  [call-arg]
        search_engine = SearchEngine(languages=["en"], enable_semantic=Fal...
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
scripts/batch_cli.py:35:11: error: "SearchEngine" has no attribute "initialize"
 [attr-defined]
        await search_engine.initialize()
              ^~~~~~~~~~~~~~~~~~~~~~~~
scripts/batch_cli.py:96:19: error: "MongoDBStorage" has no attribute "close" 
[attr-defined]
                await mongodb.close()
                      ^~~~~~~~~~~~~
scripts/batch_cli.py:141:19: error: "MongoDBStorage" has no attribute "close" 
[attr-defined]
                await mongodb.close()
                      ^~~~~~~~~~~~~
scripts/batch_cli.py:194:19: error: "MongoDBStorage" has no attribute "close" 
[attr-defined]
                await mongodb.close()
                      ^~~~~~~~~~~~~
scripts/batch_cli.py:217:19: error: "MongoDBStorage" has no attribute "close" 
[attr-defined]
                await mongodb.close()
                      ^~~~~~~~~~~~~
scripts/batch_cli.py:246:19: error: "MongoDBStorage" has no attribute "close" 
[attr-defined]
                await mongodb.close()
                      ^~~~~~~~~~~~~
scripts/batch_cli.py:317:19: error: "MongoDBStorage" has no attribute "close" 
[attr-defined]
                await mongodb.close()
                      ^~~~~~~~~~~~~
scripts/apple_dict_cli.py:13:1: error: Skipping analyzing
"src.floridify.batch.apple_dictionary_extractor": module is installed, but
missing library stubs or py.typed marker  [import-untyped]
    from src.floridify.batch.apple_dictionary_extractor import (
    ^
scripts/apple_dict_cli.py:50:10: error: Value of type variable "_PathType" of
"Path" cannot be "Path"  [type-var]
        type=click.Path(exists=True, path_type=Path),
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
scripts/apple_dict_cli.py:55:10: error: Value of type variable "_PathType" of
"Path" cannot be "Path"  [type-var]
        type=click.Path(path_type=Path),
             ^~~~~~~~~~~~~~~~~~~~~~~~~~
scripts/apple_dict_cli.py:138:23: error: "MongoDBStorage" has no attribute
"close"  [attr-defined]
                    await mongodb.close()
                          ^~~~~~~~~~~~~
scripts/apple_dict_cli.py:152:10: error: Value of type variable "_PathType" of
"Path" cannot be "Path"  [type-var]
        type=click.Path(path_type=Path),
             ^~~~~~~~~~~~~~~~~~~~~~~~~~
scripts/apple_dict_cli.py:190:23: error: "MongoDBStorage" has no attribute
"close"  [attr-defined]
                    await mongodb.close()
                          ^~~~~~~~~~~~~
scripts/apple_dict_cli.py:199:10: error: Value of type variable "_PathType" of
"Path" cannot be "Path"  [type-var]
        type=click.Path(path_type=Path),
             ^~~~~~~~~~~~~~~~~~~~~~~~~~
scripts/apple_dict_cli.py:249:23: error: "MongoDBStorage" has no attribute
"close"  [attr-defined]
                    await mongodb.close()
                          ^~~~~~~~~~~~~
scripts/apple_dict_cli.py:290:10: error: Value of type variable "_PathType" of
"Path" cannot be "Path"  [type-var]
        type=click.Path(exists=True, path_type=Path),
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
scripts/apple_dict_cli.py:295:10: error: Value of type variable "_PathType" of
"Path" cannot be "Path"  [type-var]
        type=click.Path(path_type=Path),
             ^~~~~~~~~~~~~~~~~~~~~~~~~~
src/floridify/ai/batch_processor.py:215:33: error: Incompatible types in
assignment (expression has type
"Callable[[str, type[T], KwArg(Any)], Coroutine[Any, Any, T]]", variable has
type "None")  [assignment]
            self._original_method = self.connector._make_structured_reques...
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/floridify/ai/batch_processor.py:235: error: Unused "type: ignore" comment,
use narrower [method-assign] instead of [assignment] code  [unused-ignore]
            self.connector._make_structured_request = batch_wrapper  # typ...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/floridify/ai/batch_processor.py:239:43: error: Missing type parameters for
generic type "Future"  [type-arg]
        async def _await_future(self, future: asyncio.Future) -> Any:
                                              ^
src/floridify/ai/batch_processor.py:271:24: error: Missing type parameters for
generic type "dict"  [type-arg]
            request_types: dict = {}
                           ^
src/floridify/cli/commands/config.py:12:1: error: Module
"src.floridify.utils.paths" has no attribute "get_config_path"  [attr-defined]
    from ...utils.paths import get_config_path
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/floridify/ai/synthesizer.py:469:26: error: Incompatible types in assignment
(expression has type "set[SynthesisComponent]", variable has type
"set[str] | None")  [assignment]
                components = SynthesisComponent.default_components()
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/floridify/ai/synthesizer.py:483:24: error: Argument "components" to
"enhance_definitions_parallel" has incompatible type "set[str] | None"; expected
"set[SynthesisComponent] | None"  [arg-type]
                components=components,
                           ^~~~~~~~~~
src/floridify/api/routers/ai.py:632:28: error: Incompatible default for
argument "api_request" (default has type "None", argument has type "Request") 
[assignment]
        api_request: Request = None,
                               ^~~~
src/floridify/api/routers/ai.py:632:28: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
src/floridify/api/routers/ai.py:632:28: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
src/floridify/api/routers/ai.py:653:5: error: Function is missing a return type
annotation  [no-untyped-def]
        async def generate_suggestion_events():
        ^
src/floridify/api/routers/ai.py:657:13: error: Function is missing a return
type annotation  [no-untyped-def]
                async def run_suggestion_pipeline():
                ^
src/floridify/api/routers/ai.py:657:13: note: Use "-> None" if function does not return a value
src/floridify/api/routers/facts.py:70:36: error: No overload variant of "Field"
matches argument types "None", "str", "list[str]"  [call-overload]
        categories: list[str] | None = Field(
                                       ^
src/floridify/api/routers/facts.py:70:36: note: Possible overload variants:
src/floridify/api/routers/facts.py:70:36: note:     def Field(default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
src/floridify/api/routers/facts.py:70:36: note:     def [_T] Field(default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
src/floridify/api/routers/facts.py:70:36: note:     def [_T] Field(*, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
src/floridify/api/routers/facts.py:70:36: note:     def Field(*, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
src/floridify/api/routers/facts.py:248:10: error: Incompatible types in "await"
(actual type "OpenAIConnector", expected type "Awaitable[Any]")  [misc]
        ai = await get_openai_connector()
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/floridify/api/routers/facts.py:251:28: error: Unexpected keyword argument
"context_words" for "generate_facts"  [call-arg]
        fact_data_list = await generate_facts(
                               ^
src/floridify/ai/synthesis_functions.py:480:1: note: "generate_facts" defined here
src/floridify/api/routers/facts.py:272:16: error: Missing named argument
"content" for "Fact"  [call-arg]
            fact = Fact(
                   ^
src/floridify/api/routers/facts.py:275:22: error: Argument "category" to "Fact"
has incompatible type "str | None"; expected
"Literal['etymology', 'usage', 'cultural', 'linguistic', 'historical']" 
[arg-type]
                category=category,
                         ^~~~~~~~
src/floridify/api/routers/facts.py:276:64: error: Argument 2 to "get" of
"Document" has incompatible type "float"; expected "AsyncClientSession | None" 
[arg-type]
                confidence_score=fact_data.get("confidence_score", 0.8),
                                                                   ^~~
src/floridify/api/routers/examples.py:221:2: error: Name "generate_examples"
already defined (possibly by an import)  [no-redef]
    @router.post("/definition/{definition_id}/generate", response_model=li...
     ^
src/floridify/api/routers/examples.py:239:10: error: Incompatible types in
"await" (actual type "OpenAIConnector", expected type "Awaitable[Any]")  [misc]
        ai = await get_openai_connector()
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/floridify/api/routers/examples.py:242:31: error: Unexpected keyword
argument "context" for "generate_examples"  [call-arg]
        example_data_list = await generate_examples(
                                  ^
src/floridify/ai/synthesis_functions.py:596:1: note: "generate_examples" defined here
src/floridify/api/routers/examples.py:244:9: error: Argument 2 to
"generate_examples" has incompatible type "str"; expected "Definition" 
[arg-type]
            word.text,
            ^~~~~~~~~
src/floridify/api/routers/examples.py:253:19: error: Argument after ** must be
a mapping, not "str"  [arg-type]
            example = Example(
                      ^
src/floridify/api/routers/examples.py:270:40: error: "ResourceResponse" has no
attribute "id"  [attr-defined]
        definition.example_ids.extend([str(ex.id) for ex in responses])
                                           ^~~~~
src/floridify/api/routers/definitions.py:408:32: error: Cannot call function of
unknown type  [operator]
                    result = await func(word.text, definition, ai, force_r...
                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
src/floridify/api/routers/definitions.py:410:32: error: Cannot call function of
unknown type  [operator]
                    result = await func(definition, word.text, ai)
                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/floridify/api/routers/definitions.py:461:39: error: Argument 1 to
"get_many" of "BaseRepository" has incompatible type "list[PydanticObjectId]";
expected "list[PydanticObjectId | str]"  [arg-type]
        definitions = await repo.get_many(definition_ids)
                                          ^~~~~~~~~~~~~~
src/floridify/api/routers/definitions.py:461:39: note: "list" is invariant -- see https://mypy.readthedocs.io/en/stable/common_issues.html#variance
src/floridify/api/routers/definitions.py:461:39: note: Consider using "Sequence" instead, which is covariant
src/floridify/api/routers/definitions.py:485:19: error: Function does not
return a value (it only ever returns None)  [func-returns-value]
            results = await enhance_definitions_parallel(
                      ^
src/floridify/api/routers/definitions.py:489:24: error: Argument "components"
to "enhance_definitions_parallel" has incompatible type "set[str]"; expected
"set[SynthesisComponent] | None"  [arg-type]
                components=request.components,
                           ^~~~~~~~~~~~~~~~~~
scripts/batch_synthesis_enhanced.py:35:1: error: Module
"src.floridify.ai.connector" has no attribute "AIConnector"; maybe
"OpenAIConnector"?  [attr-defined]
    from src.floridify.ai.connector import AIConnector
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
scripts/batch_synthesis_enhanced.py:38:1: error: Module "src.floridify.models"
has no attribute "Language"  [attr-defined]
    from src.floridify.models import Language
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
scripts/batch_synthesis_enhanced.py:131:5: error: Function is missing a type
annotation  [no-untyped-def]
        def _handle_shutdown(self, signum, frame):
        ^
scripts/batch_synthesis_enhanced.py:154:17: error: Returning Any from function
declared to return "int | None"  [no-any-return]
                    return data["last_position"]
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
scripts/batch_synthesis_enhanced.py:159:5: error: Function is missing a return
type annotation  [no-untyped-def]
        async def save_checkpoint(self, position: int):
        ^
scripts/batch_synthesis_enhanced.py:205:19: error: Need type annotation for
"results"  [var-annotated]
            results = {"successful": [], "failed": []}
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
scripts/batch_synthesis_enhanced.py:231:32: error: Unexpected keyword argument
"combined_data" for "synthesize_entry_batch" of "DefinitionSynthesizer" 
[call-arg]
                            task = synthesizer.synthesize_entry_batch(
                                   ^
src/floridify/ai/synthesizer.py:167:5: note: "synthesize_entry_batch" of "DefinitionSynthesizer" defined here
scripts/batch_synthesis_enhanced.py:335:5: error: Function is missing a return
type annotation  [no-untyped-def]
        async def run(self):
        ^
scripts/batch_synthesis_enhanced.py:335:5: note: Use "-> None" if function does not return a value
scripts/batch_synthesis_enhanced.py:372:13: error: "split_column" of "Layout"
does not return a value (it only ever returns None)  [func-returns-value]
                Layout(name="progress")
                ^
scripts/batch_synthesis_enhanced.py:458:5: error: Function is missing a return
type annotation  [no-untyped-def]
        def display_summary(self):
        ^
scripts/batch_synthesis_enhanced.py:458:5: note: Use "-> None" if function does not return a value
scripts/batch_synthesis_enhanced.py:483:1: error: Function is missing a return
type annotation  [no-untyped-def]
    async def main():
    ^
scripts/batch_synthesis_enhanced.py:483:1: note: Use "-> None" if function does not return a value
scripts/batch_synthesis.py:22:1: error: Cannot find implementation or library
stub for module named "typer"  [import-not-found]
    import typer
    ^
scripts/batch_synthesis.py:188:19: error: Incompatible types in "await" (actual
type "DefinitionSynthesizer", expected type "Awaitable[Any]")  [misc]
        synthesizer = await get_definition_synthesizer()
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
scripts/batch_synthesis.py:246:2: error: Untyped decorator makes function
"main" untyped  [misc]
    @app.command()
     ^~~~~~~~~~~~~
scripts/batch_synthesis.py:247:1: error: Function is missing a return type
annotation  [no-untyped-def]
    def main(
    ^
src/floridify/cli/commands/similar.py:92:34: error: "OpenAIConnector" has no
attribute "generate_synonyms"  [attr-defined]
            synonym_response = await ai_connector.generate_synonyms(
                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/floridify/cli/commands/anki.py:152:31: error: Unexpected keyword argument
"enable_semantic" for "get_search_engine"  [call-arg]
            search_engine = await get_search_engine(
                                  ^
src/floridify/api/routers/batch.py:219:9: error: Name "results" already defined
on line 199  [no-redef]
            results: list[BatchResult] = []
            ^~~~~~~
src/floridify/api/routers/batch.py:224:32: error: Argument 1 to "append" of
"list" has incompatible type "BatchResult | BaseException"; expected
"BatchResult"  [arg-type]
                    results.append(result)
                                   ^~~~~~
Found 155 errors in 27 files (checked 127 source files)

# Production overrides for docker-compose.yml
# Usage: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d
version: '3.8'

services:
  backend:
    build:
      target: production
    # Build locally on server
    image: floridify-backend:latest
    # No volume mounts in production
    volumes: []
    # Production command without reload
    command: ["uvicorn", "src.floridify.api.main:app", 
              "--host", "0.0.0.0", 
              "--port", "8000", 
              "--workers", "4",
              "--proxy-headers", 
              "--forwarded-allow-ips", "*"]
    # Don't need to wait for local MongoDB in production
    depends_on: []

  frontend:
    build:
      target: production
    # Build locally on server
    image: floridify-frontend:latest
    # Remove port mappings when using nginx (ssl profile)
    ports: []
    # No volume mounts in production
    volumes: []
    # No command override - uses nginx from Dockerfile
    command: []

  notification-server:
    build:
      target: production
    image: floridify-notification-server:latest
    volumes: []
    command: ["node", "dist/server.js"]
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

  # Nginx with SSL (optional - only if not using external load balancer)
  nginx:
    image: jonasal/nginx-certbot:5
    container_name: floridify-nginx
    restart: unless-stopped
    environment:
      CERTBOT_EMAIL: ${CERTBOT_EMAIL}
      DOMAIN: ${DOMAIN}
      # STAGING: 1  # Uncomment for Let's Encrypt staging
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - nginx_secrets:/etc/letsencrypt
      - ./nginx/user_conf.d:/etc/nginx/user_conf.d:ro
    depends_on:
      - frontend
      - backend
    networks:
      - app-network
    profiles:
      - ssl

  # MongoDB is not included in production - use remote instance

volumes:
  nginx_secrets:
    driver: local